{"version":3,"sources":["./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/environments/environment.ts","./src/app/recipeListPage/recipeList.component.ts","./src/app/recipeListPage/recipeList.component.html","./src/app/rating/rating-add.component.ts","./src/app/rating/rating-add.component.html","./src/app/recipe/recipe-update.component.ts","./src/app/recipe/recipe-update.component.html","./src/app/rating/rating-update.component.ts","./src/app/rating/rating-update.component.html","./src/app/ingredient/ingredient-update.component.ts","./src/app/ingredient/ingredient-update.component.html","./src/app/messageTable/commentTable-add.component.ts","./src/app/messageTable/commentTable-add.component.html","./src/app/fetch-data/fetch-data.component.ts","./src/app/fetch-data/fetch-data.component.html","./src/app/ingredientData/ingredientData-update.component.ts","./src/app/ingredientData/ingredientData-update.component.html","./src/app/recipe/recipe.component.ts","./src/app/recipe/recipe.component.html","./src/app/recipeListPage/recipeList-read.component.ts","./src/app/recipeListPage/recipeList-read.component.html","./src/app/user/user-add.component.ts","./src/app/user/user-add.component.html","./src/app/recipe/recipe-add.component.ts","./src/app/recipe/recipe-add.component.html","./src/app/logIn/logIn.component.ts","./src/app/logIn/logIn.component.html","./src/app/counter/counter.component.ts","./src/app/counter/counter.component.html","./src/app/ingredient/ingredient-add.component.ts","./src/app/ingredient/ingredient-add.component.html","./src/app/nav-menu/nav-menu.component.ts","./src/app/nav-menu/nav-menu.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/user/user-update.component.ts","./src/app/user/user-update.component.html","./src/app/messageTable/commentTable-update.component.ts","./src/app/messageTable/commentTable-update.component.html","./src/app/ingredientData/ingredientData-add.component.ts","./src/app/ingredientData/ingredientData-add.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n})\r\nexport class HomeComponent {\r\n}\r\n","<h1>Hello, world!</h1>\r\n<p>Welcome to your new single-page application, built with:</p>\r\n<ul>\r\n  <li><a href='https://get.asp.net/'>ASP.NET Core</a> and <a href='https://msdn.microsoft.com/en-us/library/67ef8sbd.aspx'>C#</a> for cross-platform server-side code</li>\r\n  <li><a href='https://angular.io/'>Angular</a> and <a href='http://www.typescriptlang.org/'>TypeScript</a> for client-side code</li>\r\n  <li><a href='http://getbootstrap.com/'>Bootstrap</a> for layout and styling</li>\r\n</ul>\r\n<p>To help you get started, we've also set up:</p>\r\n<ul>\r\n  <li><strong>Client-side navigation</strong>. For example, click <em>Counter</em> then <em>Back</em> to return here.</li>\r\n  <li><strong>Angular CLI integration</strong>. In development mode, there's no need to run <code>ng serve</code>. It runs in the background automatically, so your client-side resources are dynamically built on demand and the page refreshes when you modify any file.</li>\r\n  <li><strong>Efficient production builds</strong>. In production mode, development-time features are disabled, and your <code>dotnet publish</code> configuration automatically invokes <code>ng build</code> to produce minified, ahead-of-time compiled JavaScript files.</li>\r\n</ul>\r\n<p>The <code>ClientApp</code> subdirectory is a standard Angular CLI application. If you open a command prompt in that directory, you can run any <code>ng</code> command (e.g., <code>ng test</code>), or use <code>npm</code> to install extra packages into it.</p>\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * In development mode, to ignore zone related error stack frames such as\r\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\r\n * import the following file, but please comment it out in production mode\r\n * because it will have performance impact when throw error\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { Inject } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Component } from '@angular/core';\r\nimport { Recipe, Rating, User } from '../recipe/recipe.models.component';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-recipeList',\r\n  templateUrl: './recipeList.component.html',\r\n  styleUrls: ['button-overview-example.css','editButtonStyle.css'],\r\n})\r\nexport class RecipeListComponent {\r\n  public recipes: Recipe[];\r\n  public ratings: Rating[];\r\n  constructor(private http: HttpClient, @Inject('BASE_URL') private baseUrl: string, private router: Router) {\r\n    this.loadRecipes();\r\n    this.loadRatings();\r\n    this.loadUsers();\r\n  }\r\n\r\n\r\n  public test: boolean;\r\n  public users: User[];\r\n  loadUsers() {\r\n    this.http.get<User[]>(this.baseUrl + 'api/users').subscribe(result => {\r\n      this.users = result;\r\n      this.test = this.checkLoggedIn()\r\n    }, error => console.error(error));\r\n  }\r\n\r\n  checkLoggedIn() {\r\n    for (let i = 0; i < this.users.length; i++) {\r\n      if (this.users[i].loggedIn == true) {\r\n        return true\r\n      }\r\n    }\r\n    return false\r\n  }\r\n\r\n\r\n  average(res) {\r\n    if (!this.ratings)\r\n      return \"empty\";\r\n\r\n    let average = 0;\r\n    let devideBy = 0;\r\n    for (let i = 0; i < this.ratings.length; i++) {\r\n      if (res.id == this.ratings[i].recipeID) {\r\n        average += this.ratings[i].ratingNr;\r\n      }\r\n    }\r\n\r\n    for (let i = 0; i < this.ratings.length; i++) {\r\n      if (res.id == this.ratings[i].recipeID) {\r\n        if (this.ratings[i].ratingNr != 0) {\r\n          devideBy++;\r\n        }\r\n      }\r\n    }\r\n    average /= devideBy;\r\n    if (average == 0 || !average) {\r\n      return \"empty\"\r\n    }\r\n    return Math.floor(average);\r\n  }\r\n  counter(i: number) {\r\n    return new Array(Number(i));\r\n  }\r\n\r\n  loadRecipes() {\r\n    this.http.get<Recipe[]>(this.baseUrl + 'api/recipes').subscribe(result => {\r\n      this.recipes = result;\r\n\r\n    }, error => console.error(error));\r\n  }\r\n\r\n\r\n  loadRatings() {\r\n    this.http.get<Rating[]>(this.baseUrl + 'api/ratings').subscribe(result => {\r\n      this.ratings = result;\r\n    }, error => console.error(error));\r\n  }\r\n\r\n\r\n  \r\n  }\r\n\r\n \r\n\r\n\r\n","<h1 id=\"tableLabel\">Recipe List</h1>\r\n\r\n\r\n\r\n\r\n<style>\r\n  div.gallery {\r\n    background: darkgray;\r\n    margin: 5px;\r\n    border: 1px solid #ccc;\r\n    float: left;\r\n    width: 200px;\r\n    text-align: center;\r\n    color: black;\r\n  }\r\n\r\n    div.gallery:hover {\r\n      border: 1px solid #777;\r\n    }\r\n\r\n\r\n  div.desc {\r\n    padding: 15px;\r\n    text-align: center;\r\n    color: black\r\n  }\r\n\r\n  div.rating {\r\n    padding: 15px;\r\n    text-align: center;\r\n    color: black;\r\n  }\r\n</style>\r\n<span *ngIf=\"test\">\r\n  <button class=\"btn btn-primary\" [routerLink]=\"['/recipe-add']\">+</button>\r\n</span>\r\n<br />\r\n<tr *ngFor=\"let recipe of recipes\">\r\n  <a [routerLink]=\"['/recipeList-read',recipe.id]\">\r\n    <div class=\"gallery\">\r\n      {{recipe.recipeName}}<br />\r\n      <img src=\"{{recipe.imageLink}}\" width=\"180\" height=\"180\">\r\n      <div class=\"desc\">{{recipe.recipeSummary}}</div>\r\n      <div class=\"rating\">\r\n        <div *ngIf=\"average(recipe) == 0 || average(recipe) == 'empty'\">\r\n          <b>No ratings yet...</b>\r\n        </div>\r\n        <div *ngIf=\"average(recipe) != 0 && average(recipe) && average(recipe) != 'empty' \">\r\n          <span *ngFor='let in of counter(average(recipe)) ;let i = index'>\r\n            <i class=\"fa fa-star\"></i>\r\n          </span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </a>\r\n</tr>\r\n\r\n\r\n\r\n\r\n","import { Component, Inject } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Router } from '@angular/router'\r\nimport { ThemePalette } from '@angular/material/core';\r\nimport { Rating } from '../recipe/recipe.models.component';\r\n\r\nexport interface Task {\r\n  name: string;\r\n  completed: boolean;\r\n  color: ThemePalette;\r\n  subtasks?: Task[];\r\n}\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-rating-add',\r\n  templateUrl: './rating-add.component.html',\r\n  styleUrls: ['InsertCss.css']\r\n})\r\nexport class RatingAddComponent  {\r\n  public rating: Rating = <Rating>{};\r\n  constructor(private http: HttpClient, @Inject('BASE_URL') private baseUrl: string, private router: Router) {\r\n  }\r\n\r\n  public saveRating() {\r\n    this.http.post(this.baseUrl + 'api/ratings', this.rating).subscribe(result => {\r\n      this.router.navigateByUrl(\"/recipes\")\r\n    }, error => console.error(error));\r\n  }\r\n\r\n\r\n}\r\n\r\n","<h1 id=\"tableLabel\">Add user</h1>\r\n\r\n\r\n<table class=\"example-full-width\" cellspacing=\"0\">\r\n  <tr>\r\n    <td>\r\n      <mat-form-field class=\"example-full-width\">\r\n        <mat-label>rating ratingNr</mat-label>\r\n        <input matInput [(ngModel)]=\"rating.ratingNr\" />\r\n      </mat-form-field>\r\n    </td>\r\n  </tr>\r\n  <tr>\r\n\r\n  <tr>\r\n    <td>\r\n      <mat-form-field class=\"example-full-width\">\r\n        <mat-label>rating userID</mat-label>\r\n        <input matInput [(ngModel)]=\"rating.userID\" />\r\n      </mat-form-field>\r\n    </td>\r\n  </tr>\r\n\r\n  <tr>\r\n    <td>\r\n      <mat-form-field class=\"example-full-width\">\r\n        <mat-label>rating recipeID</mat-label>\r\n        <input matInput [(ngModel)]=\"rating.recipeID\" />\r\n      </mat-form-field>\r\n    </td>\r\n  </tr>\r\n\r\n\r\n</table>\r\n\r\n<div class=\"example-button-row\">\r\n  <button mat-raised-button color=\"accent\" (click)=\"saveRating()\">Save User</button>\r\n</div>\r\n","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { Recipe } from './recipe.models.component';\r\n\r\n@Component({\r\n  selector: 'app-recipe-update',\r\n  templateUrl: './recipe-update.component.html',\r\n  styleUrls: ['input.css'],\r\n\r\n})\r\nexport class RecipeUpdateComponent implements OnInit {\r\n  constructor(private http: HttpClient,\r\n    @Inject('BASE_URL') private baseUrl: string,\r\n    private router: Router,\r\n    private activatedRoute: ActivatedRoute) { }\r\n\r\n  public id: string;\r\n  public recipe: Recipe = <Recipe>{};\r\n  \r\n  ngOnInit() {\r\n   \r\n    this.activatedRoute.queryParams.subscribe(params => {\r\n      this.id = params.id;\r\n      this.loadRecipe();\r\n    });\r\n\r\n  }\r\n\r\n  public loadRecipe() {\r\n    this.http.get<Recipe>(this.baseUrl + 'api/recipes/' + this.id).subscribe(result => {\r\n      this.recipe = result;\r\n    }, error => console.error(error))\r\n  }\r\n\r\n  public updateRecipe() {\r\n    this.http.put<Recipe>(this.baseUrl + 'api/recipes/' + this.id, this.recipe).subscribe(result => {\r\n      this.router.navigateByUrl(\"/recipeList-read/\" + this.recipe.id)\r\n    }, error => console.error(error))\r\n  }\r\n}\r\n","\r\n<h1 id=\"tableLabel\">Update recipe</h1>\r\n\r\n\r\n\r\n\r\n<table  class=\"example-full-width\" cellspacing=\"0\">\r\n\r\n\r\n  <tr>\r\n    <td>\r\n      <mat-form-field class=\"example-full-width\">\r\n        <mat-label>Recipe Name</mat-label>\r\n        <input matInput [(ngModel)]=\"recipe.recipeName\" />\r\n      </mat-form-field>\r\n      Current Img:\r\n\r\n    </td>\r\n  </tr>\r\n  <tr>\r\n\r\n    <td>\r\n      <mat-form-field class=\"example-full-width\">\r\n        <mat-label>Image link</mat-label>\r\n        <input matInput [(ngModel)]=\"recipe.imageLink\" />\r\n      </mat-form-field>\r\n      <img [src]=\"recipe.imageLink\" width=\"100\" height=\"100\" />\r\n    </td>\r\n  </tr>\r\n  <tr>\r\n  <tr>\r\n    <td>\r\n      <mat-form-field class=\"example-full-width\">\r\n        <mat-label>Recipe Summary</mat-label>\r\n        <input matInput [(ngModel)]=\"recipe.recipeSummary\" />\r\n      </mat-form-field>\r\n    </td>\r\n  </tr>\r\n  <tr>\r\n    <td>\r\n\r\n      <mat-form-field class=\"example-full-width\">\r\n        <mat-label>Recipe Details</mat-label>\r\n        <textarea\r\n                    cdkTextareaAutosize\r\n            #autosize=\"cdkTextareaAutosize\"\r\n            cdkAutosizeMinRows=\"1\"\r\n            cdkAutosizeMaxRows=\"5\"\r\n                  matInput [(ngModel)]=\"recipe.recipeDetails\" ></textarea>\r\n      </mat-form-field>\r\n    </td>\r\n  </tr>\r\n  <tr>\r\n    <td>\r\n      <mat-form-field class=\"example-full-width\">\r\n        <mat-label>Average Time</mat-label>\r\n        <input matInput type=\"number\" [(ngModel)]=\"recipe.cookingTime\" />\r\n      </mat-form-field>\r\n    </td>\r\n  </tr>\r\n \r\n  \r\n</table>\r\n\r\n<div class=\"example-button-row\">\r\n  <button mat-raised-button color=\"accent\" (click)=\"updateRecipe()\">Save Recipe</button>\r\n</div>\r\n\r\n","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { Rating } from '../recipe/recipe.models.component';\r\n\r\n@Component({\r\n  selector: 'app-rating-update',\r\n  templateUrl: './rating-update.component.html',\r\n  styleUrls: ['input.css'],\r\n\r\n})\r\nexport class RatingUpdateComponent implements OnInit {\r\n  constructor(private http: HttpClient,\r\n    @Inject('BASE_URL') private baseUrl: string,\r\n    private router: Router,\r\n    private activatedRoute: ActivatedRoute) { }\r\n\r\n  public id: string;\r\n  public rating: Rating = <Rating>{};\r\n  \r\n  ngOnInit() {\r\n   \r\n    this.activatedRoute.queryParams.subscribe(params => {\r\n      this.id = params.id;\r\n      this.loadRatings();\r\n    });\r\n\r\n  }\r\n\r\n  public loadRatings() {\r\n    this.http.get<Rating>(this.baseUrl + 'api/ratings/' + this.id).subscribe(result => {\r\n      this.rating = result;\r\n    }, error => console.error(error))\r\n  }\r\n  \r\n\r\n  public updateRating() {\r\n    this.http.put<Rating>(this.baseUrl + 'api/ratings/' + this.id, this.rating).subscribe(result => {\r\n      this.router.navigateByUrl(\"/recipes\")\r\n    }, error => console.error(error))\r\n  }\r\n}\r\n","\r\n<h1 id=\"tableLabel\">Update recipe</h1>\r\n\r\n\r\n\r\n\r\n<table class=\"example-full-width\" cellspacing=\"0\">\r\n\r\n\r\n  <tr>\r\n    <td>\r\n      <mat-form-field class=\"example-full-width\">\r\n        <mat-label>Rating ratingNr</mat-label>\r\n        <input matInput [(ngModel)]=\"rating.ratingNr\" />\r\n      </mat-form-field>\r\n    </td>\r\n  </tr>\r\n  <tr>\r\n\r\n  <tr>\r\n    <td>\r\n      <mat-form-field class=\"example-full-width\">\r\n        <mat-label>Rating userID</mat-label>\r\n        <input matInput [(ngModel)]=\"rating.userID\" />\r\n      </mat-form-field>\r\n    </td>\r\n  </tr>\r\n  <tr>\r\n\r\n  <tr>\r\n    <td>\r\n      <mat-form-field class=\"example-full-width\">\r\n        <mat-label>Rating recipeID</mat-label>\r\n        <input matInput [(ngModel)]=\"rating.recipeID\" />\r\n      </mat-form-field>\r\n    </td>\r\n  </tr>\r\n  <tr>\r\n\r\n\r\n</table>\r\n\r\n<div class=\"example-button-row\">\r\n  <button mat-raised-button color=\"accent\" (click)=\"updateRating()\">Save User</button>\r\n</div>\r\n\r\n","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { Ingredient } from '../recipe/recipe.models.component';\r\n\r\n@Component({\r\n  selector: 'app-ingredient-update',\r\n  templateUrl: './ingredient-update.component.html',\r\n  styleUrls: ['input.css'],\r\n\r\n})\r\nexport class IngredientUpdateComponent implements OnInit {\r\n  constructor(private http: HttpClient,\r\n    @Inject('BASE_URL') private baseUrl: string,\r\n    private router: Router,\r\n    private activatedRoute: ActivatedRoute) { }\r\n\r\n  public id: string;\r\n  public ingredient: Ingredient = <Ingredient>{};\r\n  \r\n  ngOnInit() {\r\n   \r\n    this.activatedRoute.queryParams.subscribe(params => {\r\n      this.id = params.id;\r\n      this.loadIngredients();\r\n    });\r\n\r\n  }\r\n\r\n  public loadIngredients() {\r\n    this.http.get<Ingredient>(this.baseUrl + 'api/ingredients/' + this.id).subscribe(result => {\r\n      this.ingredient = result;\r\n    }, error => console.error(error))\r\n  }\r\n\r\n  public updateIngredient() {\r\n    this.http.put<Ingredient>(this.baseUrl + 'api/ingredients/' + this.id, this.ingredient).subscribe(result => {\r\n      this.router.navigateByUrl(\"/recipes\")\r\n    }, error => console.error(error))\r\n  }\r\n}\r\n","\r\n<h1 id=\"tableLabel\">Update recipe</h1>\r\n\r\n\r\n\r\n\r\n<table class=\"example-full-width\" cellspacing=\"0\">\r\n\r\n\r\n  <tr>\r\n    <td>\r\n      <mat-form-field class=\"example-full-width\">\r\n        <mat-label>Name</mat-label>\r\n        <input matInput [(ngModel)]=\"ingredient.name\" />\r\n      </mat-form-field>\r\n    </td>\r\n  </tr>\r\n  <tr>\r\n\r\n  <tr>\r\n    <td>\r\n      <mat-form-field class=\"example-full-width\">\r\n        <mat-label>details</mat-label>\r\n        <input matInput [(ngModel)]=\"ingredient.details\" />\r\n      </mat-form-field>\r\n    </td>\r\n  </tr>\r\n  <tr>\r\n\r\n  \r\n\r\n\r\n</table>\r\n\r\n<div class=\"example-button-row\">\r\n  <button mat-raised-button color=\"accent\" (click)=\"updateIngredient()\">Save User</button>\r\n</div>\r\n\r\n","import { Component, Inject } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Router } from '@angular/router'\r\nimport { ThemePalette } from '@angular/material/core';\r\nimport { CommentTable, Recipe, User } from '../recipe/recipe.models.component';\r\n\r\nexport interface Task {\r\n  name: string;\r\n  completed: boolean;\r\n  color: ThemePalette;\r\n  subtasks?: Task[];\r\n}\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-commentTable-add',\r\n  templateUrl: './commentTable-add.component.html',\r\n  styleUrls: ['InsertCss.css']\r\n})\r\nexport class CommentTableAddComponent  {\r\n  public commentTableCreate: CommentTable = <CommentTable>{};\r\n  public recipes: Recipe[];\r\n  public users: User[];\r\n  constructor(private http: HttpClient, @Inject('BASE_URL') private baseUrl: string, private router: Router) {\r\n    this.loadRecipes();\r\n    this.loadUsers();\r\n  }\r\n\r\n  public saveCommentTable() {\r\n    this.http.post(this.baseUrl + 'api/commentTables', this.commentTableCreate).subscribe(result => {\r\n      this.router.navigateByUrl(\"/recipes\")\r\n    }, error => console.error(error));\r\n  }\r\n\r\n  loadRecipes() {\r\n    this.http.get<Recipe[]>(this.baseUrl + 'api/recipes').subscribe(result => {\r\n      this.recipes = result;\r\n    }, error => console.error(error));\r\n  }\r\n\r\n\r\n  loadUsers() {\r\n    this.http.get<User[]>(this.baseUrl + 'api/users').subscribe(result => {\r\n      this.users = result;\r\n    }, error => console.error(error));\r\n  }\r\n}\r\n\r\n","<h1 id=\"tableLabel\">Add user</h1>\r\n\r\n\r\n\r\n<table class=\"example-full-width\" cellspacing=\"0\">\r\n  <tr>\r\n    <td>\r\n      <mat-form-field class=\"example-full-width\">\r\n        <mat-label>Comment msg</mat-label>\r\n        <input matInput [(ngModel)]=\"commentTableCreate.msg\" />\r\n\r\n\r\n\r\n      </mat-form-field>\r\n\r\n    </td>\r\n  </tr>\r\n  <tr>\r\n\r\n  <tr>\r\n    <td>\r\n        <mat-form-field appearance=\"fill\" class=\"example-full-width\">\r\n          <mat-label>Recipe Name</mat-label>\r\n          <mat-select placeholder=\"Recipe Name\" [(ngModel)]=\"commentTableCreate.recipeID\">\r\n            <span *ngFor='let recipe of recipes'>\r\n\r\n              <mat-option value=\"{{recipe.id}}\">{{recipe.recipeName}}</mat-option>\r\n            </span>\r\n          </mat-select>\r\n        </mat-form-field>\r\n    </td>\r\n  </tr>\r\n\r\n  <tr>\r\n    <td>\r\n\r\n      <mat-form-field appearance=\"fill\" class=\"example-full-width\">\r\n        <mat-label>User Name</mat-label>\r\n        <mat-select placeholder=\"User Name\" [(ngModel)]=\"commentTableCreate.userID\">\r\n          <span *ngFor='let user of users'>\r\n\r\n            <mat-option value=\"{{user.id}}\">{{user.name}}</mat-option>\r\n          </span>\r\n        </mat-select>\r\n      </mat-form-field>\r\n\r\n    </td>\r\n  </tr>\r\n\r\n</table>\r\n\r\n<div class=\"example-button-row\">\r\n  <button mat-raised-button color=\"accent\" (click)=\"saveCommentTable()\">Save User</button>\r\n</div>\r\n","import { Component, Inject } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Component({\r\n  selector: 'app-fetch-data',\r\n  templateUrl: './fetch-data.component.html'\r\n})\r\nexport class FetchDataComponent {\r\n  public forecasts: WeatherForecast[];\r\n\r\n  constructor(http: HttpClient, @Inject('BASE_URL') baseUrl: string) {\r\n    http.get<WeatherForecast[]>(baseUrl + 'weatherforecast').subscribe(result => {\r\n      this.forecasts = result;\r\n    }, error => console.error(error));\r\n  }\r\n}\r\n\r\ninterface WeatherForecast {\r\n  date: string;\r\n  temperatureC: number;\r\n  temperatureF: number;\r\n  summary: string;\r\n}\r\n","<h1 id=\"tableLabel\">Weather forecast</h1>\r\n\r\n<p>This component demonstrates fetching data from the server.</p>\r\n\r\n<p *ngIf=\"!forecasts\"><em>Loading...</em></p>\r\n\r\n<table class='table table-striped' aria-labelledby=\"tableLabel\" *ngIf=\"forecasts\">\r\n  <thead>\r\n    <tr>\r\n      <th>Date</th>\r\n      <th>Temp. (C)</th>\r\n      <th>Temp. (F)</th>\r\n      <th>Summary</th>\r\n    </tr>\r\n  </thead>\r\n  <tbody>\r\n    <tr *ngFor=\"let forecast of forecasts\">\r\n      <td>{{ forecast.date }}</td>\r\n      <td>{{ forecast.temperatureC }}</td>\r\n      <td>{{ forecast.temperatureF }}</td>\r\n      <td>{{ forecast.summary }}</td>\r\n    </tr>\r\n  </tbody>\r\n</table>\r\n","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { IngredientData } from '../recipe/recipe.models.component';\r\n\r\n@Component({\r\n  selector: 'app-ingredientData-update',\r\n  templateUrl: './ingredientData-update.component.html',\r\n  styleUrls: ['input.css'],\r\n\r\n})\r\nexport class IngredientDataUpdateComponent implements OnInit {\r\n  constructor(private http: HttpClient,\r\n    @Inject('BASE_URL') private baseUrl: string,\r\n    private router: Router,\r\n    private activatedRoute: ActivatedRoute) { }\r\n\r\n  public id: string;\r\n  public ingredientData: IngredientData = <IngredientData>{};\r\n  \r\n  ngOnInit() {\r\n   \r\n    this.activatedRoute.queryParams.subscribe(params => {\r\n      this.id = params.id;\r\n      this.loadIngredients();\r\n    });\r\n\r\n  }\r\n\r\n  public loadIngredients() {\r\n    this.http.get<IngredientData>(this.baseUrl + 'api/ingredientDatas/' + this.id).subscribe(result => {\r\n      this.ingredientData = result;\r\n    }, error => console.error(error))\r\n  }\r\n\r\n  public updateIngredientData() {\r\n    this.http.put<IngredientData>(this.baseUrl + 'api/ingredientDatas/' + this.id, this.ingredientData).subscribe(result => {\r\n      this.router.navigateByUrl(\"/recipes\")\r\n    }, error => console.error(error))\r\n  }\r\n}\r\n","\r\n<h1 id=\"tableLabel\">Update recipe</h1>\r\n\r\n\r\n\r\n\r\n<table class=\"example-full-width\" cellspacing=\"0\">\r\n\r\n\r\n  <tr>\r\n    <td>\r\n      <mat-form-field class=\"example-full-width\">\r\n        <mat-label>recipeID</mat-label>\r\n        <input matInput [(ngModel)]=\"ingredientData.recipeID\" />\r\n      </mat-form-field>\r\n    </td>\r\n  </tr>\r\n  <tr>\r\n\r\n  <tr>\r\n    <td>\r\n      <mat-form-field class=\"example-full-width\">\r\n        <mat-label>ingredientID</mat-label>\r\n        <input matInput [(ngModel)]=\"ingredientData.ingredientID\" />\r\n      </mat-form-field>\r\n    </td>\r\n  </tr>\r\n  <tr>\r\n\r\n  <tr>\r\n    <td>\r\n      <mat-form-field class=\"example-full-width\">\r\n        <mat-label>quantity</mat-label>\r\n        <input matInput [(ngModel)]=\"ingredientData.quantity\" />\r\n      </mat-form-field>\r\n    </td>\r\n  </tr>\r\n  <tr>\r\n\r\n\r\n\r\n</table>\r\n\r\n<div class=\"example-button-row\">\r\n  <button mat-raised-button color=\"accent\" (click)=\"updateIngredientData()\">Save ingredientData</button>\r\n</div>\r\n\r\n","import { Inject } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Component } from '@angular/core';\r\nimport { Recipe, User, Rating, Ingredient, IngredientData, CommentTable } from './recipe.models.component'\r\nimport { ThemePalette } from '@angular/material/core';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { ViewChild } from '@angular/core';\r\n\r\nexport interface Task {\r\n  name: string;\r\n  completed: boolean;\r\n  color: ThemePalette;\r\n  subtasks?: Task[];\r\n}\r\n\r\n@Component({\r\n  selector: 'app-recipe',\r\n  templateUrl: './recipe.component.html',\r\n  styleUrls: ['StyleSheet.css'],\r\n\r\n})\r\nexport class RecipeComponent {\r\n  dataSource: MatTableDataSource<Recipe>;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n\r\n  public recipes: Recipe[];\r\n  public users: User[];\r\n  public ratings: Rating[];\r\n  public ingredients: Ingredient[];\r\n  public ingredientsData: IngredientData[];\r\n  public commentTables: CommentTable[];\r\n  displayedColumnsRecipes: string[] = ['imageLink', 'recipeName', 'authorId', 'recipeSummary', 'recipeDetails', 'cookingTime', 'recipeRatingAverage', 'actions'];\r\n  displayedColumnsUsers: string[] = ['id', 'name', 'userName', 'mail', 'password', 'loggedIn','actions'];\r\n  displayedColumnsRatings: string[] = ['ratingNr', 'userID', 'recipeID','actions'];\r\n  displayedColumnsIngredients: string[] = ['id', 'name', 'details', 'actions'];\r\n  displayedColumnsIngredientsData: string[] = ['id', 'recipeID', 'ingredientID','quantity', 'actions'];\r\n  displayedColumnsComments: string[] = ['id', 'msg', 'recipeID', 'userID','actions'];\r\n  constructor(private http: HttpClient, @Inject('BASE_URL') private baseUrl: string) {\r\n    this.loadRecipes();\r\n    this.loadUsers();\r\n    this.loadRatings();\r\n    this.loadIngredients();\r\n    this.loadIngredientsData();\r\n    this.loadComments();\r\n  }\r\n\r\n  loadRecipes() {\r\n    this.http.get<Recipe[]>(this.baseUrl + 'api/recipes').subscribe(result => {\r\n      this.recipes = result;\r\n      this.dataSource = new MatTableDataSource(result);\r\n      this.dataSource.sort = this.sort;\r\n    }, error => console.error(error));\r\n  }\r\n\r\n  loadUsers() {\r\n    this.http.get<User[]>(this.baseUrl + 'api/users').subscribe(result => {\r\n      this.users = result;\r\n    }, error => console.error(error));\r\n  }\r\n\r\n  loadRatings() {\r\n    this.http.get<Rating[]>(this.baseUrl + 'api/ratings').subscribe(result => {\r\n      this.ratings = result;\r\n    }, error => console.error(error));\r\n  }\r\n\r\n  loadIngredients() {\r\n    this.http.get<Ingredient[]>(this.baseUrl + 'api/ingredients').subscribe(result => {\r\n      this.ingredients = result;\r\n    }, error => console.error(error));\r\n  }\r\n\r\n  \r\n\r\n  loadIngredientsData() {\r\n    this.http.get<IngredientData[]>(this.baseUrl + 'api/ingredientDatas').subscribe(result => {\r\n      this.ingredientsData = result;\r\n    }, error => console.error(error));\r\n  }\r\n\r\n  loadComments() {\r\n    this.http.get<CommentTable[]>(this.baseUrl + 'api/commentTables').subscribe(result => {\r\n      this.commentTables = result;\r\n    }, error => console.error(error));\r\n  }\r\n\r\n\r\n  average(res) {\r\n    if (!this.ratings)\r\n      return \"empty\";\r\n \r\n    let average = 0;\r\n    let devideBy = 0;\r\n    for (let i = 0; i < this.ratings.length; i++) {\r\n   if (res.id == this.ratings[i].recipeID) {\r\n   average += this.ratings[i].ratingNr;\r\n   }\r\n    }\r\n\r\n    for (let i = 0; i < this.ratings.length; i++) {\r\n      if (res.id == this.ratings[i].recipeID) {\r\n        if (this.ratings[i].ratingNr != 0) {\r\n          devideBy++;\r\n        }\r\n      }\r\n    }\r\n    average /= devideBy;\r\n    if (average == 0 || !average) {\r\n      return \"empty\"\r\n    }\r\n    return Math.floor(average);\r\n  }\r\n \r\n\r\n  public deleteRecipe(Recipe: Recipe) {\r\n    this.http.delete(this.baseUrl + 'api/recipes/' + Recipe.id).subscribe(result => {\r\n      this.loadRecipes();\r\n    }, error => console.error(error))\r\n  }\r\n\r\n\r\n  public deleteUser(User: User) {\r\n    this.http.delete(this.baseUrl + 'api/users/' + User.id).subscribe(result => {\r\n      this.loadUsers();\r\n    }, error => console.error(error))\r\n  }\r\n\r\n  public deleteIngredient(Ingredient: Ingredient) {\r\n    this.http.delete(this.baseUrl + 'api/ingredients/' + Ingredient.id).subscribe(result => {\r\n      this.loadIngredients();\r\n    }, error => console.error(error))\r\n  }\r\n\r\n  public deleteRating(Rating: Rating) {\r\n    this.http.delete(this.baseUrl + 'api/ratings/' + Rating.id).subscribe(result => {\r\n      this.loadIngredients();\r\n    }, error => console.error(error))\r\n  } \r\n\r\n  public deleteIngredientData(IngredientData: IngredientData) {\r\n    this.http.delete(this.baseUrl + 'api/ingredientDatas/' + IngredientData.id).subscribe(result => {\r\n      this.loadIngredientsData();\r\n    }, error => console.error(error))\r\n  }\r\n\r\n  public deleteComment(CommentTable: CommentTable) {\r\n    this.http.delete(this.baseUrl + 'api/commentTables/' + CommentTable.id).subscribe(result => {\r\n      this.loadComments();\r\n    }, error => console.error(error))\r\n  } \r\n}\r\n\r\n\r\n","\r\n<p *ngIf=\"!recipes\"><em>Loading...</em></p>\r\n\r\n\r\n\r\n\r\n\r\n\r\n<table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\" matSort matSortActive=\"recipeName\" matSortDirection=\"desc\" matSortDisableClear>\r\n\r\n\r\n  <ng-container matColumnDef=\"imageLink\" >\r\n    <th mat-header-cell *matHeaderCellDef mat-sort-header> RecipeDetails </th>\r\n    <td mat-cell *matCellDef=\"let recipe\"> <img [src]=\"recipe.imageLink\" width=\"100\" height=\"100\" /> </td>\r\n  </ng-container>\r\n\r\n  <ng-container matColumnDef=\"recipeName\">\r\n    <th mat-header-cell *matHeaderCellDef mat-sort-header> Recipe Name </th>\r\n    <td mat-cell *matCellDef=\"let recipe\"> {{recipe.recipeName}} </td>\r\n  </ng-container>\r\n\r\n  <ng-container matColumnDef=\"authorId\">\r\n    <th mat-header-cell *matHeaderCellDef mat-sort-header> AuthorId</th>\r\n    <td mat-cell *matCellDef=\"let recipe\">\r\n      {{recipe.authorId}}\r\n      <div *ngFor=\"let user of users\">\r\n        <div *ngIf=\"recipe.authorId == user.id\">\r\n          {{user.name}}\r\n        </div>\r\n      </div>\r\n\r\n    </td>\r\n  </ng-container>\r\n\r\n  <ng-container matColumnDef=\"recipeDetails\">\r\n    <th mat-header-cell *matHeaderCellDef mat-sort-header>Recipe Details</th>\r\n    <td mat-cell *matCellDef=\"let recipe\"> {{recipe.recipeDetails}} </td>\r\n  </ng-container>\r\n\r\n  <ng-container matColumnDef=\"recipeSummary\">\r\n    <th mat-header-cell *matHeaderCellDef mat-sort-header> Recipe Summary </th>\r\n    <td mat-cell *matCellDef=\"let recipe\"> {{recipe.recipeSummary}} </td>\r\n  </ng-container>\r\n\r\n  <ng-container matColumnDef=\"cookingTime\">\r\n    <th mat-header-cell *matHeaderCellDef mat-sort-header> Cooking Time </th>\r\n    <td mat-cell *matCellDef=\"let recipe\"> {{recipe.cookingTime}} </td>\r\n  </ng-container>\r\n\r\n  <ng-container matColumnDef=\"recipeRatingAverage\">\r\n    <th mat-header-cell *matHeaderCellDef mat-sort-header> Recipe Rating </th>\r\n    <td mat-cell *matCellDef=\"let recipe\">\r\n      {{average(recipe)}}\r\n    </td>\r\n  </ng-container>\r\n\r\n\r\n  <ng-container matColumnDef=\"actions\">\r\n    <th mat-header-cell *matHeaderCellDef style=\"width:15%\">Actions</th>\r\n    <td mat-cell *matCellDef=\"let recipe\">\r\n      <section>\r\n        <div class=\"example-button-row\">\r\n          <a href=\"/recipe-update?id={{recipe.id}}\">\r\n            <button mat-icon-button color=\"primary\" matTooltip=\"Edit\">\r\n              <mat-icon>edit</mat-icon>\r\n            </button>\r\n          </a>\r\n          <button mat-icon-button color=\"primary\" matTooltip=\"Delete\" (click)=\"deleteRecipe(recipe)\" aria-hidden=\"false\">\r\n            <mat-icon>delete</mat-icon>\r\n          </button>\r\n\r\n        </div>\r\n      </section>\r\n    </td>\r\n  </ng-container>\r\n\r\n  <tr mat-header-row *matHeaderRowDef=\"displayedColumnsRecipes\"></tr>\r\n  <tr mat-row *matRowDef=\"let row; columns: displayedColumnsRecipes;\"></tr>\r\n</table>\r\n\r\n<button class=\"btn btn-primary\" [routerLink]=\"['/recipe-add']\">Add recipe</button>\r\n\r\n<br />\r\n<br />\r\n\r\n\r\n<table mat-table [dataSource]=\"users\" class=\"mat-elevation-z8\">\r\n\r\n\r\n  <ng-container matColumnDef=\"id\">\r\n    <th mat-header-cell *matHeaderCellDef>User ID</th>\r\n    <td mat-cell *matCellDef=\"let user\"> {{user.id}} </td>\r\n  </ng-container>\r\n\r\n  <ng-container matColumnDef=\"name\">\r\n    <th mat-header-cell *matHeaderCellDef>User Name</th>\r\n    <td mat-cell *matCellDef=\"let user\"> {{user.name}} </td>\r\n  </ng-container>\r\n\r\n  <ng-container matColumnDef=\"userName\">\r\n    <th mat-header-cell *matHeaderCellDef>User UserName</th>\r\n    <td mat-cell *matCellDef=\"let user\"> {{user.username}} </td>\r\n  </ng-container>\r\n\r\n  <ng-container matColumnDef=\"mail\">\r\n    <th mat-header-cell *matHeaderCellDef>Mail</th>\r\n    <td mat-cell *matCellDef=\"let user\"> {{user.mail}} </td>\r\n  </ng-container>\r\n\r\n  <ng-container matColumnDef=\"password\">\r\n    <th mat-header-cell *matHeaderCellDef>password</th>\r\n    <td mat-cell *matCellDef=\"let user\"> {{user.password}} </td>\r\n  </ng-container>\r\n\r\n  <ng-container matColumnDef=\"loggedIn\">\r\n    <th mat-header-cell *matHeaderCellDef>loggedIn</th>\r\n    <td mat-cell *matCellDef=\"let user\"> {{user.loggedIn}} </td>\r\n  </ng-container>\r\n\r\n  <ng-container matColumnDef=\"actions\">\r\n    <th mat-header-cell *matHeaderCellDef style=\"width:15%\">Actions</th>\r\n    <td mat-cell *matCellDef=\"let user\">\r\n      <section>\r\n        <div class=\"example-button-row\">\r\n          <a href=\"/user-update?id={{user.id}}\">\r\n            <button mat-icon-button color=\"primary\" matTooltip=\"Edit\">\r\n              <mat-icon>edit</mat-icon>\r\n            </button>\r\n          </a>\r\n          <button mat-icon-button color=\"primary\" matTooltip=\"Delete\" (click)=\"deleteUser(user)\" aria-hidden=\"false\">\r\n            <mat-icon>delete</mat-icon>\r\n          </button>\r\n\r\n        </div>\r\n      </section>\r\n    </td>\r\n  </ng-container>\r\n\r\n\r\n  <tr mat-header-row *matHeaderRowDef=\"displayedColumnsUsers\"></tr>\r\n  <tr mat-row *matRowDef=\"let row; columns: displayedColumnsUsers;\"></tr>\r\n</table>\r\n\r\n<button class=\"btn btn-primary\" [routerLink]=\"['/user-add']\">Add User</button>\r\n\r\n<br />\r\n<br />\r\n\r\n<table mat-table [dataSource]=\"ratings\" class=\"mat-elevation-z8\">\r\n\r\n\r\n  <ng-container matColumnDef=\"ratingNr\">\r\n    <th mat-header-cell *matHeaderCellDef>RatingNr</th>\r\n    <td mat-cell *matCellDef=\"let rating\"> {{rating.ratingNr}} </td>\r\n  </ng-container>\r\n\r\n  <ng-container matColumnDef=\"userID\">\r\n    <th mat-header-cell *matHeaderCellDef>userID</th>\r\n    <td mat-cell *matCellDef=\"let rating\"> {{rating.userID}} </td>\r\n  </ng-container>\r\n\r\n  <ng-container matColumnDef=\"recipeID\">\r\n    <th mat-header-cell *matHeaderCellDef>recipeId</th>\r\n    <td mat-cell *matCellDef=\"let rating\"> {{rating.recipeID}} </td>\r\n  </ng-container>\r\n\r\n\r\n  <ng-container matColumnDef=\"actions\">\r\n    <th mat-header-cell *matHeaderCellDef style=\"width:15%\">Actions</th>\r\n    <td mat-cell *matCellDef=\"let rating\">\r\n      <section>\r\n        <div class=\"example-button-row\">\r\n          <a href=\"/rating-update?id={{rating.id}}\">\r\n            <button mat-icon-button color=\"primary\" matTooltip=\"Edit\">\r\n              <mat-icon>edit</mat-icon>\r\n            </button>\r\n          </a>\r\n          <button mat-icon-button color=\"primary\" matTooltip=\"Delete\" (click)=\"deleteRating(rating)\" aria-hidden=\"false\">\r\n            <mat-icon>delete</mat-icon>\r\n          </button>\r\n\r\n        </div>\r\n      </section>\r\n    </td>\r\n  </ng-container>\r\n\r\n\r\n  <tr mat-header-row *matHeaderRowDef=\"displayedColumnsRatings\"></tr>\r\n  <tr mat-row *matRowDef=\"let row; columns: displayedColumnsRatings;\"></tr>\r\n</table>\r\n<button class=\"btn btn-primary\" [routerLink]=\"['/rating-add']\">Add rating</button>\r\n\r\n<br />\r\n<br />\r\n<table mat-table [dataSource]=\"ingredients\" class=\"mat-elevation-z8\">\r\n\r\n\r\n  <ng-container matColumnDef=\"id\">\r\n    <th mat-header-cell *matHeaderCellDef>id</th>\r\n    <td mat-cell *matCellDef=\"let ingredient\"> {{ingredient.id}} </td>\r\n  </ng-container>\r\n\r\n  <ng-container matColumnDef=\"name\">\r\n    <th mat-header-cell *matHeaderCellDef>name</th>\r\n    <td mat-cell *matCellDef=\"let ingredient\"> {{ingredient.name}} </td>\r\n  </ng-container>\r\n\r\n  <ng-container matColumnDef=\"details\">\r\n    <th mat-header-cell *matHeaderCellDef>details</th>\r\n    <td mat-cell *matCellDef=\"let ingredient\"> {{ingredient.details}} </td>\r\n  </ng-container>\r\n\r\n\r\n  <ng-container matColumnDef=\"actions\">\r\n    <th mat-header-cell *matHeaderCellDef style=\"width:15%\">Actions</th>\r\n    <td mat-cell *matCellDef=\"let ingredient\">\r\n      <section>\r\n        <div class=\"example-button-row\">\r\n          <a href=\"/ingredient-update?id={{ingredient.id}}\">\r\n            <button mat-icon-button color=\"primary\" matTooltip=\"Edit\">\r\n              <mat-icon>edit</mat-icon>\r\n            </button>\r\n          </a>\r\n          <button mat-icon-button color=\"primary\" matTooltip=\"Delete\" (click)=\"deleteIngredient(ingredient)\" aria-hidden=\"false\">\r\n            <mat-icon>delete</mat-icon>\r\n          </button>\r\n\r\n        </div>\r\n      </section>\r\n    </td>\r\n  </ng-container>\r\n\r\n  <tr mat-header-row *matHeaderRowDef=\"displayedColumnsIngredients\"></tr>\r\n  <tr mat-row *matRowDef=\"let row; columns: displayedColumnsIngredients;\"></tr>\r\n\r\n\r\n</table>\r\n\r\n<button class=\"btn btn-primary\" [routerLink]=\"['/ingredient-add']\">Add ingredient</button>\r\n\r\n\r\n<br />\r\n<br />\r\n\r\n<table mat-table [dataSource]=\"ingredientsData\" class=\"mat-elevation-z8\">\r\n\r\n\r\n  <ng-container matColumnDef=\"id\">\r\n    <th mat-header-cell *matHeaderCellDef>id</th>\r\n    <td mat-cell *matCellDef=\"let ingredientData\"> {{ingredientData.id}} </td>\r\n  </ng-container>\r\n\r\n  <ng-container matColumnDef=\"recipeID\">\r\n    <th mat-header-cell *matHeaderCellDef>recipeID</th>\r\n    <td mat-cell *matCellDef=\"let ingredientData\"> {{ingredientData.recipeID}} </td>\r\n  </ng-container>\r\n\r\n  <ng-container matColumnDef=\"ingredientID\">\r\n    <th mat-header-cell *matHeaderCellDef>ingredientID</th>\r\n    <td mat-cell *matCellDef=\"let ingredientData\"> {{ingredientData.ingredientID}} </td>\r\n  </ng-container>\r\n\r\n  <ng-container matColumnDef=\"quantity\">\r\n    <th mat-header-cell *matHeaderCellDef>quantity</th>\r\n    <td mat-cell *matCellDef=\"let ingredientData\"> {{ingredientData.quantity}} </td>\r\n  </ng-container>\r\n  \r\n\r\n  <ng-container matColumnDef=\"actions\">\r\n    <th mat-header-cell *matHeaderCellDef style=\"width:15%\">Actions</th>\r\n    <td mat-cell *matCellDef=\"let ingredientData\">\r\n      <section>\r\n        <div class=\"example-button-row\">\r\n          <a href=\"/ingredientData-update?id={{ingredientData.id}}\">\r\n            <button mat-icon-button color=\"primary\" matTooltip=\"Edit\">\r\n              <mat-icon>edit</mat-icon>\r\n            </button>\r\n          </a>\r\n          <button mat-icon-button color=\"primary\" matTooltip=\"Delete\" (click)=\"deleteIngredientData(ingredientData)\" aria-hidden=\"false\">\r\n            <mat-icon>delete</mat-icon>\r\n          </button>\r\n\r\n        </div>\r\n      </section>\r\n    </td>\r\n  </ng-container>\r\n\r\n  <tr mat-header-row *matHeaderRowDef=\"displayedColumnsIngredientsData\"></tr>\r\n  <tr mat-row *matRowDef=\"let row; columns: displayedColumnsIngredientsData;\"></tr>\r\n\r\n\r\n</table>\r\n\r\n<button class=\"btn btn-primary\" [routerLink]=\"['/ingredientData-add']\">Add ingredientData</button>\r\n\r\n\r\n<table mat-table [dataSource]=\"commentTables\" class=\"mat-elevation-z8\">\r\n\r\n\r\n  <ng-container matColumnDef=\"id\">\r\n    <th mat-header-cell *matHeaderCellDef>id</th>\r\n    <td mat-cell *matCellDef=\"let commentTable\"> {{commentTable.id}} </td>\r\n  </ng-container>\r\n\r\n  <ng-container matColumnDef=\"msg\">\r\n    <th mat-header-cell *matHeaderCellDef>msg</th>\r\n    <td mat-cell *matCellDef=\"let commentTable\"> {{commentTable.msg}} </td>\r\n  </ng-container>\r\n\r\n  <ng-container matColumnDef=\"recipeID\">\r\n    <th mat-header-cell *matHeaderCellDef>recipeID</th>\r\n    <td mat-cell *matCellDef=\"let commentTable\"> {{commentTable.recipeID}} </td>\r\n  </ng-container>\r\n\r\n  <ng-container matColumnDef=\"userID\">\r\n    <th mat-header-cell *matHeaderCellDef>userID</th>\r\n    <td mat-cell *matCellDef=\"let commentTable\"> {{commentTable.userID}} </td>\r\n  </ng-container>\r\n\r\n\r\n\r\n  <ng-container matColumnDef=\"actions\">\r\n    <th mat-header-cell *matHeaderCellDef style=\"width:15%\">Actions</th>\r\n    <td mat-cell *matCellDef=\"let commentTable\">\r\n      <section>\r\n        <div class=\"example-button-row\">\r\n          <a href=\"/commentTable-update?id={{commentTable.id}}\">\r\n            <button mat-icon-button color=\"primary\" matTooltip=\"Edit\">\r\n              <mat-icon>edit</mat-icon>\r\n            </button>\r\n          </a>\r\n          <button mat-icon-button color=\"primary\" matTooltip=\"Delete\" (click)=\"deleteComment(commentTable)\" aria-hidden=\"false\">\r\n            <mat-icon>delete</mat-icon>\r\n          </button>\r\n\r\n        </div>\r\n      </section>\r\n    </td>\r\n  </ng-container>\r\n\r\n\r\n  <tr mat-header-row *matHeaderRowDef=\"displayedColumnsComments\"></tr>\r\n  <tr mat-row *matRowDef=\"let row; columns: displayedColumnsComments;\"></tr>\r\n\r\n\r\n\r\n</table>\r\n\r\n\r\n<button class=\"btn btn-primary\" [routerLink]=\"['/commentTable-add']\">Add commentTable</button>\r\n","import { Component, Inject, OnInit, Input, Output, EventEmitter } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Router } from '@angular/router';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { CommentTable, Ingredient, IngredientData, Rating, Recipe, User } from '../recipe/recipe.models.component';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { ViewChild } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-recipeList-read',\r\n  styleUrls: ['recipeList-read.component.css', 'InsertCss.css'],\r\n  templateUrl: './recipeList-read.component.html'\r\n})\r\n\r\nexport class RecipeListReadComponent implements OnInit {\r\n  dataSourceComment: MatTableDataSource<CommentTable>;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n\r\n\r\n  public id: string;\r\n  public recipe: Recipe = <Recipe>{};\r\n  public recipes: Recipe[];\r\n  public users: User[];\r\n  public ingredients: Ingredient[];\r\n  public ingredientsData: IngredientData[];\r\n  public ingredientData: IngredientData = <IngredientData>{};\r\n  public ratings: Rating[];\r\n  public commentTables: CommentTable[];\r\n\r\n  displayedColumnsComments: string[] = ['msg', 'time'];\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    @Inject('BASE_URL') private baseUrl: string,\r\n    private router: Router,\r\n    private activateRouter: ActivatedRoute) {\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n\r\n    this.activateRouter.params.subscribe(param => {\r\n\r\n      this.id = param['id'];\r\n      this.loadRecipes();\r\n      this.loadRecipe();\r\n      this.loadUsers();\r\n      this.loadIngredients();\r\n      this.loadIngredientsData();\r\n      this.loadRatings();\r\n      this.loadComments();\r\n      this.commentRecipes = [];\r\n      this.foundRecipes = false;\r\n    });\r\n  }\r\n\r\n  counter(i: number) {\r\n    return new Array(Number(i));\r\n  }\r\n\r\n\r\n  average(res) {\r\n    if (!this.ratings)\r\n      return \"empty\";\r\n\r\n    let average = 0;\r\n    let devideBy = 0;\r\n    for (let i = 0; i < this.ratings.length; i++) {\r\n      if (res.id == this.ratings[i].recipeID) {\r\n        average += this.ratings[i].ratingNr;\r\n      }\r\n    }\r\n\r\n    for (let i = 0; i < this.ratings.length; i++) {\r\n      if (res.id == this.ratings[i].recipeID) {\r\n        if (this.ratings[i].ratingNr != 0) {\r\n          devideBy++;\r\n        }\r\n      }\r\n    }\r\n\r\n    average /= devideBy;\r\n    if (average == 0 || !average) {\r\n      return \"empty\"\r\n    }\r\n    return Math.floor(average);\r\n  }\r\n\r\n\r\n  loadRecipes() {\r\n    this.http.get<Recipe[]>(this.baseUrl + 'api/recipes').subscribe(result => {\r\n      this.recipes = result;\r\n    }, error => console.error(error));\r\n  }\r\n\r\n  public commentRecipes: Recipe[] = [];\r\n  public foundRecipes: boolean = false;\r\n  commentPeopleRecipes() {\r\n    let userComments: User[] = [];\r\n    for (let i = 0; i < this.commentTables.length; i++) {\r\n      if (this.commentTables[i].recipeID == this.recipe.id) {\r\n        for (let k = 0; k < this.users.length; k++) {\r\n          if (this.commentTables[i].userID == this.users[k].id && this.users[k].id != this.recipe.authorId)\r\n              userComments.push(this.users[k])\r\n          }\r\n        }\r\n    }\r\n    var userCommentsUnique = this.toUniqueArray(userComments);\r\n\r\n    for (let i = 0; i < userCommentsUnique.length; i++) {\r\n      for (let j = 0; j < this.recipes.length; j++) {\r\n        if (userCommentsUnique[i].id == this.recipes[j].authorId) {\r\n          if (this.commentRecipes.length < 5) {\r\n            this.foundRecipes = true;\r\n          this.commentRecipes.push(this.recipes[j])\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  public toUniqueArray(a) {\r\n  var newArr = [];\r\n  for (var i = 0; i < a.length; i++) {\r\n    if (newArr.indexOf(a[i]) === -1) {\r\n      newArr.push(a[i]);\r\n    }\r\n  }\r\n  return newArr;\r\n}\r\n\r\n  public loadRecipe() {\r\n    this.http.get<Recipe>(this.baseUrl + 'api/recipes/' + this.id).subscribe(result => {\r\n      this.recipe = result;\r\n    }, error => console.error(error))\r\n  }\r\n\r\n\r\n  public deleteRecipe(Recipe: Recipe) {\r\n    this.http.delete(this.baseUrl + 'api/recipes/' + Recipe.id).subscribe(result => {\r\n      this.loadRecipes();\r\n      this.router.navigateByUrl(\"/recipeList\")\r\n    }, error => console.error(error))\r\n  }\r\n\r\n\r\n\r\n  public test: boolean;\r\n\r\n  loadUsers() {\r\n    this.http.get<User[]>(this.baseUrl + 'api/users').subscribe(result => {\r\n      this.users = result;\r\n      this.test = this.checkLoggedIn()\r\n    }, error => console.error(error));\r\n  }\r\n\r\n  checkLoggedIn() {\r\n\r\n    for (let i = 0; i < this.users.length; i++) {\r\n      if (this.users[i].loggedIn == true) {\r\n        return true\r\n      }\r\n    }\r\n    return false\r\n  }\r\n\r\n\r\n  loadIngredients() {\r\n    this.http.get<Ingredient[]>(this.baseUrl + 'api/ingredients').subscribe(result => {\r\n      this.ingredients = result;\r\n    }, error => console.error(error));\r\n  }\r\n\r\n  loadIngredientsData() {\r\n    this.http.get<IngredientData[]>(this.baseUrl + 'api/ingredientDatas').subscribe(result => {\r\n      this.ingredientsData = result;\r\n    }, error => console.error(error));\r\n  }\r\n\r\n  public deleteIngredientData(IngredientData: IngredientData) {\r\n    this.http.delete(this.baseUrl + 'api/ingredientDatas/' + IngredientData.id).subscribe(result => {\r\n      this.loadIngredientsData();\r\n    }, error => console.error(error))\r\n  }\r\n\r\n\r\n  loadRatings() {\r\n    this.http.get<Rating[]>(this.baseUrl + 'api/ratings').subscribe(result => {\r\n      this.ratings = result;\r\n    }, error => console.error(error));\r\n  }\r\n\r\n  public deleteRating(Rating: Rating) {\r\n    this.http.delete(this.baseUrl + 'api/ratings/' + Rating.id).subscribe(result => {\r\n      this.loadIngredients();\r\n      window.location.reload();\r\n    }, error => console.error(error))\r\n  } \r\n\r\n  public rating: Rating = <Rating>{};\r\n  public saveRating() {\r\n    let user = this.getLoggedInUser();\r\n\r\n    this.rating.recipeID = this.id;\r\n    this.rating.userID = user;\r\n    this.rating.ratingNr = this.selectedValue;\r\n    this.http.post(this.baseUrl + 'api/ratings', this.rating).subscribe(result => {\r\n      window.location.reload();\r\n    }, error => console.error(error));\r\n  }\r\n\r\n\r\n  loadComments() {\r\n    this.http.get<CommentTable[]>(this.baseUrl + 'api/commentTables').subscribe(result => {\r\n      this.commentTables = result;\r\n      this.dataSourceComment = new MatTableDataSource(result);\r\n      this.dataSourceComment.sort = this.sort;\r\n    }, error => console.error(error));\r\n  }\r\n\r\n  public commentTableCreate: CommentTable = <CommentTable>{};\r\n  public saveCommentTable() {\r\n    let currentTime = new Date();\r\n    let user = this.getLoggedInUser();\r\n    this.commentTableCreate.recipeID = this.id;\r\n    this.commentTableCreate.userID = user;\r\n    this.commentTableCreate.sentDate = currentTime;\r\n    this.http.post(this.baseUrl + 'api/commentTables', this.commentTableCreate).subscribe(result => {\r\n      window.location.reload();\r\n    }, error => console.error(error));\r\n  }\r\n\r\n\r\n\r\n\r\n  public getLoggedInUser() {\r\n\r\n    for (let i = 0; i < this.users.length; i++) {\r\n      if (this.users[i].loggedIn == true) {\r\n        return this.users[i].id\r\n      }\r\n    }\r\n  }\r\n\r\n  public deleteComment(CommentTable: CommentTable) {\r\n    this.http.delete(this.baseUrl + 'api/commentTables/' + CommentTable.id).subscribe(result => {\r\n      this.loadComments();\r\n    }, error => console.error(error))\r\n  }\r\n\r\n  public testUserRating() {\r\n    let found = false;\r\n    if (!this.ratings) {\r\n      return false;\r\n    }\r\n\r\n    for (let i = 0; i < this.users.length; i++) {\r\n      if (this.users[i].loggedIn == true) {\r\n        for (let j = 0; j < this.ratings.length; j++) {\r\n          if (this.users[i].id == this.ratings[j].userID) {\r\n            if (this.id == this.ratings[j].recipeID) {\r\n              found = true;\r\n              return found;\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return found;\r\n  }\r\n\r\n\r\n  stars: number[] = [1, 2, 3, 4, 5];\r\n  selectedValue = 0;\r\n  countStar(star) {\r\n    this.selectedValue = star;\r\n    this.saveRating();\r\n  }\r\n\r\n\r\n\r\n \r\n    public newMsgTable: CommentTable[];\r\n  public sortVar() {\r\n    if (!this.commentTables) {\r\n      return true\r\n    }\r\n    this.newMsgTable = this.commentTables;\r\n    for (let i = 0; i < this.newMsgTable.length - 1; i++) {\r\n      let date = new Date(this.newMsgTable[i].sentDate)\r\n      let date2 = new Date(this.newMsgTable[i + 1].sentDate)\r\n      if (date.getTime() < date2.getTime()) {\r\n          let aux = this.newMsgTable[i];\r\n          this.newMsgTable[i] = this.newMsgTable[i + 1];\r\n          this.newMsgTable[i + 1] = aux\r\n      }\r\n    }\r\n    return true\r\n  }\r\n\r\n\r\n  public saveIngredientData() {\r\n    this.ingredientData.recipeID = this.id;\r\n    this.http.post(this.baseUrl + 'api/ingredientDatas', this.ingredientData).subscribe(result => {\r\n      window.location.reload();\r\n    }, error => console.error(error));\r\n  }\r\n\r\n \r\n\r\n}\r\n\r\n","<mat-card style=\"text-align: center;\">\r\n\r\n  <div class=\"leftAling\">\r\n    <button mat-raised-button color=\"primary\" [routerLink]=\"['/recipeList']\"><mat-icon>arrow_back</mat-icon></button>\r\n\r\n  </div>\r\n  <div *ngFor=\"let user of users\">\r\n    <div *ngIf=\"user.loggedIn == true\">\r\n      <div *ngIf=\"recipe.authorId == user.id\">\r\n        <div class=\"rigthAling\">\r\n          <a href=\"/recipe-update?id={{recipe.id}}\">\r\n            <button mat-icon-button color=\"primary\" matTooltip=\"Edit\">\r\n              <mat-icon>edit</mat-icon>\r\n            </button>\r\n          </a>\r\n          <button mat-icon-button color=\"primary\" matTooltip=\"Delete\" (click)=\"deleteRecipe(recipe)\" aria-hidden=\"false\">\r\n            <mat-icon>delete</mat-icon>\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <br /><br />\r\n  <mat-card-title>\r\n    <mat-card-title><u>{{ recipe.recipeName }}</u>:</mat-card-title>\r\n  </mat-card-title>\r\n\r\n\r\n  <div class=\"leftAling\">\r\n    <mat-card-header>\r\n      <mat-card-title>Recipe Summary </mat-card-title>\r\n      <mat-card-subtitle>{{ recipe.recipeSummary }}</mat-card-subtitle>\r\n    </mat-card-header>\r\n  </div>\r\n\r\n  <div class=\"centerAling2\">\r\n    <mat-card-title>\r\n      <mat-card-title>Recipe Image</mat-card-title>\r\n      <mat-card-subtitle><img src=\"{{recipe.imageLink}}\" width=\"180\" height=\"180\"></mat-card-subtitle>\r\n    </mat-card-title>\r\n  </div>\r\n\r\n  <div class=\"leftAling\">\r\n    <mat-card-title>\r\n      <mat-card-title>Author Name</mat-card-title>\r\n      <mat-card-subtitle>\r\n\r\n\r\n        <div *ngFor=\"let user of users\">\r\n          <div *ngIf=\"recipe.authorId == user.id\">\r\n            {{user.name}} ({{user.username}})\r\n          </div>\r\n        </div>\r\n\r\n\r\n      </mat-card-subtitle>\r\n    </mat-card-title>\r\n  </div>\r\n\r\n\r\n\r\n  <div class=\"rigthAling\">\r\n    <mat-card-title>\r\n      <mat-card-title>Recipe Rating</mat-card-title><mat-card-subtitle>\r\n        <div *ngIf=\"average(recipe) == 0 || average(recipe) == 'empty'\">\r\n          <b>No ratings yet...</b>\r\n        </div>\r\n        <div *ngIf=\"average(recipe) != 0 && average(recipe) && average(recipe) != 'empty' \">\r\n          <span *ngFor='let in of counter(average(recipe)) ;let i = index'>\r\n            <i class=\"fa fa-star\"></i>\r\n          </span>\r\n        </div>\r\n\r\n      </mat-card-subtitle>\r\n    </mat-card-title>\r\n  </div>\r\n\r\n\r\n  <div class=\"centerAling\">\r\n    <mat-card-title>\r\n      <mat-card-title>Average Time</mat-card-title>\r\n      <mat-card-subtitle>{{ recipe.cookingTime }} min</mat-card-subtitle>\r\n    </mat-card-title>\r\n  </div>\r\n\r\n\r\n\r\n\r\n  <mat-card-title>\r\n    <mat-card-title>Recipe Details</mat-card-title>\r\n    <mat-card-subtitle>{{ recipe.recipeDetails }}</mat-card-subtitle>\r\n  </mat-card-title>\r\n\r\n\r\n  <span *ngIf=\"test\">\r\n    <div *ngIf=\"!testUserRating()\">\r\n      <div class=\"rigthAling\">\r\n        <b>Add a rating:</b>\r\n        <div class=\"row\">\r\n          <div class=\"col-sm-12\">\r\n            <ul class=\"list-inline rating-list\" *ngFor=\"let star of stars\" style=\"display: inline-block\">\r\n              <li (click)=\"countStar(star)\"\r\n                  [ngClass]=\"{'selected': (star <= selectedValue)}\">\r\n                <i class=\"fa fa-star\"></i>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </span>\r\n\r\n  <span *ngIf=\"test\">\r\n    <div *ngIf=\"testUserRating()\">\r\n      <div class=\"rigthAling\">\r\n        <mat-card-title>Your rating:</mat-card-title>\r\n        <mat-card-subtitle>\r\n\r\n          <div *ngFor=\"let rating of ratings\">\r\n            <div *ngIf=\"rating.recipeID == recipe.id\">\r\n              <div *ngFor=\"let user of users\">\r\n                <div *ngIf=\"user.loggedIn == true\">\r\n                  <div *ngIf=\"rating.userID == user.id\">\r\n                    <button mat-icon-button color=\"primary\" matTooltip=\"Delete\" (click)=\"deleteRating(rating)\" aria-hidden=\"false\">\r\n                      <span *ngFor='let in of counter(rating.ratingNr) ;let i = index'>\r\n                        <i class=\"fa fa-star\"></i>\r\n                      </span>\r\n                    </button>\r\n\r\n\r\n\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n        </mat-card-subtitle>\r\n      </div>\r\n    </div>\r\n  </span>\r\n\r\n  <mat-card-header>\r\n    <mat-card-title>Ingredients</mat-card-title>\r\n    <mat-card-subtitle>\r\n\r\n      <div *ngFor=\"let ingredientData of ingredientsData\">\r\n        <div *ngIf=\"ingredientData.recipeID ==  recipe.id\">\r\n          <div *ngFor=\"let ingredient of ingredients\">\r\n            <div *ngIf=\"ingredient.id ==  ingredientData.ingredientID\">\r\n              {{ingredientData.quantity}} - {{ingredient.name}}\r\n\r\n              <span *ngFor=\"let user of users\">\r\n                <span *ngIf=\"user.loggedIn == true\">\r\n                  <span *ngIf=\"recipe.authorId == user.id\">\r\n                    <button mat-icon-button color=\"primary\" matTooltip=\"Delete\" (click)=\"deleteIngredientData(ingredientData)\" aria-hidden=\"false\">\r\n                      <mat-icon>delete</mat-icon>\r\n                    </button>\r\n                  </span>\r\n                </span>\r\n              </span>\r\n\r\n\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n\r\n\r\n    </mat-card-subtitle>\r\n  </mat-card-header>\r\n\r\n\r\n  <div *ngFor=\"let user of users\">\r\n    <div *ngIf=\"user.loggedIn == true\">\r\n      <div *ngIf=\"recipe.authorId == user.id\">\r\n\r\n        <mat-card-header>\r\n          <mat-card-subtitle>\r\n            <mat-form-field class=\"example-some-width\">\r\n              <mat-label>Quantity</mat-label>\r\n              <input maxlength=\"20\" matInput [(ngModel)]=\"ingredientData.quantity\" />\r\n            </mat-form-field>\r\n            <mat-form-field class=\"example-some-width\">\r\n              <mat-label>Add ingredient</mat-label>\r\n              <mat-select placeholder=\"Ingredient\" [(ngModel)]=\"ingredientData.ingredientID\">\r\n                <span *ngFor=\"let ingredient of ingredients\">\r\n                  <mat-option value=\"{{ingredient.id}}\" data-toggle=\"tooltip\" title=\"{{ingredient.details}}\">{{ingredient.name}}</mat-option>\r\n                </span>\r\n              </mat-select>\r\n            </mat-form-field>\r\n            <button mat-raised-button color=\"default\" (click)=\"saveIngredientData()\">+</button>\r\n          </mat-card-subtitle>\r\n        </mat-card-header>\r\n\r\n      </div>\r\n    </div>\r\n  </div>\r\n</mat-card>\r\n\r\n\r\n<style>\r\n  div.galleryShow {\r\n    background: darkgray;\r\n    margin: 5px;\r\n    border: 1px solid #ccc;\r\n    float: left;\r\n    width: 200px;\r\n    text-align: center;\r\n    color: black;\r\n  }\r\n\r\n    div.galleryShow:hover {\r\n      border: 1px solid #777;\r\n    }\r\n\r\n\r\n  div.ratingGal {\r\n    padding: 15px;\r\n    text-align: center;\r\n    color: black;\r\n  }\r\n</style>\r\n\r\n<br />\r\n<button mat-raised-button color=\"default\" (click)=\"commentPeopleRecipes()\">Recipes by people who commented</button>\r\n<div *ngFor=\"let recipe of commentRecipes\">\r\n  <a [routerLink]=\"['/recipeList-read',recipe.id]\">\r\n    <div class=\"galleryShow\">\r\n      {{recipe.recipeName}}<br />\r\n      <img src=\"{{recipe.imageLink}}\" width=\"180\" height=\"180\">\r\n      <div class=\"ratingGal\">\r\n        <div *ngIf=\"average(recipe) == 0 || average(recipe) == 'empty'\">\r\n          <b>No ratings yet...</b>\r\n        </div>\r\n        <div *ngIf=\"average(recipe) != 0 && average(recipe) && average(recipe) != 'empty' \">\r\n          <span *ngFor='let in of counter(average(recipe)) ;let i = index'>\r\n            <i class=\"fa fa-star\"></i>\r\n          </span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    </a>\r\n</div>\r\n\r\n\r\n<div *ngIf=\"foundRecipes\">\r\n  <br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br />\r\n</div>\r\n\r\n<br/>\r\n<h2>\r\n  Chat Messages <mat-icon> insert_comment </mat-icon>\r\n</h2>\r\n\r\n\r\n\r\n<div *ngIf=\"sortVar()\">\r\n  <div *ngFor=\"let commentTable of newMsgTable\">\r\n    <div *ngIf=\"commentTable.recipeID == recipe.id\">\r\n      <div *ngFor=\"let user of users\">\r\n        <div *ngIf=\"commentTable.userID == user.id\">\r\n          <div class=\"container\">\r\n            <div *ngIf=\"user.loggedIn == true\" class=\"time-right\">\r\n              <a href=\"/commentTable-update?id={{commentTable.id}}\">\r\n                <button mat-icon-button color=\"primary\" matTooltip=\"Edit\">\r\n                  <mat-icon>edit</mat-icon>\r\n                </button>\r\n              </a>\r\n              <button mat-icon-button color=\"primary\" matTooltip=\"Delete\" (click)=\"deleteComment(commentTable)\" aria-hidden=\"false\">\r\n                <mat-icon>delete</mat-icon>\r\n              </button>\r\n            </div><b>\r\n              {{user.name}}\r\n              ({{user.username}}):\r\n            </b>\r\n            <br />\r\n            <div class=\"text-color\">\r\n              <i>\r\n                {{commentTable.msg}}\r\n              </i>\r\n            </div>\r\n            <span class=\"rating-right\">\r\n              (user rating:\r\n              <span *ngFor=\"let rating of ratings\">\r\n                <span *ngIf=\"rating.recipeID == recipe.id\">\r\n                  <span *ngIf=\"rating.userID == user.id\">\r\n                    <span *ngFor='let in of counter(rating.ratingNr) ;let i = index'>\r\n                      <i class=\"fa fa-star\"></i>\r\n                    </span>\r\n                  </span>\r\n                </span>\r\n              </span>)\r\n            </span>\r\n            <br />\r\n            <span class=\"time-right\">\r\n              {{commentTable.sentDate  | date:'short' : 'UTC+6'}}\r\n            </span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"gallery\">\r\n  <b>Add a comment:</b>\r\n  <span *ngIf=\"test\">\r\n    <table class=\"example-full-width\" cellspacing=\"0\">\r\n      <tr>\r\n        <td>\r\n          <mat-form-field class=\"example-full-width\">\r\n            <mat-label>Write a new comment (max: 2000 characters)</mat-label>\r\n            <input maxlength=\"2000\" matInput [(ngModel)]=\"commentTableCreate.msg\" />\r\n          </mat-form-field>\r\n        </td>\r\n      </tr>\r\n    </table>\r\n    <button mat-raised-button color=\"accent\" (click)=\"saveCommentTable()\">Send</button>\r\n  </span>\r\n  <span *ngIf=\"!test\">\r\n    <table class=\"example-full-width\" cellspacing=\"0\">\r\n      <tr>\r\n        <td>\r\n          <mat-form-field class=\"example-full-width\">\r\n            <mat-label>Log in to write message</mat-label>\r\n            <input maxlength=\"2000\" matInput [(ngModel)]=\"commentTableCreate.msg\" readonly=\"readonly\" />\r\n          </mat-form-field>\r\n        </td>\r\n      </tr>\r\n    </table>\r\n  </span>\r\n</div>\r\n\r\n\r\n\r\n\r\n<div *ngIf=\"sortVar()\">\r\n\r\n</div>\r\n","import { Component, Inject } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Router } from '@angular/router'\r\nimport { ThemePalette } from '@angular/material/core';\r\nimport { User } from '../recipe/recipe.models.component';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\n\r\nexport interface Task {\r\n  name: string;\r\n  completed: boolean;\r\n  color: ThemePalette;\r\n  subtasks?: Task[];\r\n}\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-user-add',\r\n  templateUrl: './user-add.component.html',\r\n  styleUrls: ['input.css']\r\n})\r\nexport class UserAddComponent  {\r\n  public user: User = <User>{};\r\n  constructor(private http: HttpClient, @Inject('BASE_URL') private baseUrl: string, private router: Router, private _snackBar: MatSnackBar) {\r\n    this.loadUsers();\r\n    \r\n  }\r\n\r\n  public name: string;\r\n  public username: string;\r\n  public mail: string;\r\n  public password: string;\r\n\r\n\r\n  saveUserInfo() {\r\n    let mailValid\r\n    let nameValid = true;\r\n    if (this.mail) {\r\n      mailValid = this.mail.endsWith(\"@mail.com\");\r\n    }\r\n    for (let i = 0; i < this.users.length; i++) {\r\n      if (this.users[i].name == this.name) {\r\n        nameValid = false;\r\n      }\r\n    }\r\n\r\n    if (!this.name || !nameValid) {\r\n      this._snackBar.open(\"Invalid name!\", \"close\");\r\n    }\r\n    else if (!this.username) {\r\n      this._snackBar.open(\"Invalid username!\", \"close\");\r\n    }\r\n    else if (!this.mail || !mailValid) {\r\n      this._snackBar.open(\"Invalid mail!\", \"close\");\r\n    }\r\n    else if (!this.password) {\r\n      this._snackBar.open(\"Invalid password!\", \"close\");\r\n    } else {\r\n      this.saveUser()\r\n    }\r\n\r\n  }\r\n\r\n  public saveUser() {\r\n    this.logOutUsers();\r\n    this.user.name = this.name;\r\n    this.user.username = this.username;\r\n    this.user.mail = this.mail;\r\n    this.user.password = this.password;\r\n    this.user.loggedIn = true;\r\n    this.http.post(this.baseUrl + 'api/users', this.user).subscribe(result => {\r\n      this.router.navigateByUrl(\"/recipeList\")\r\n    }, error => console.error(error));\r\n  }\r\n\r\n\r\n  public users: User[];\r\n  loadUsers() {\r\n    this.http.get<User[]>(this.baseUrl + 'api/users').subscribe(result => {\r\n      this.users = result;\r\n    }, error => console.error(error));\r\n  }\r\n\r\n  allUserID: User;\r\n  logOutUsers() {\r\n    for (let i = 0; i < this.users.length; i++) {\r\n      this.allUserID = this.users[i];\r\n      this.updateUserTest(this.allUserID, false);\r\n      console.log(this.users[i].id);\r\n    }\r\n  }\r\n\r\n  public updateUserTest(userID, log) {\r\n    userID.loggedIn = log;\r\n    this.http.put<User>(this.baseUrl + 'api/users/' + userID.id, userID).subscribe(result => {\r\n    }, error => console.error(error))\r\n  }\r\n\r\n\r\n\r\n}\r\n\r\n","<h1 id=\"tableLabel\">Add user</h1>\r\n<mat-card style=\"text-align: center;\">\r\n  <table class=\"example-full-width\" cellspacing=\"0\">\r\n    <tr>\r\n      <td>\r\n        <mat-form-field class=\"example-full-width\">\r\n          <mat-label>User Name</mat-label>\r\n          <input matInput [(ngModel)]=\"name\" />\r\n        </mat-form-field>\r\n      </td>\r\n    </tr>\r\n    <tr>\r\n\r\n    <tr>\r\n      <td>\r\n        <mat-form-field class=\"example-full-width\">\r\n          <mat-label>User Username</mat-label>\r\n          <input matInput [(ngModel)]=\"username\" />\r\n        </mat-form-field>\r\n      </td>\r\n    </tr>\r\n\r\n    <tr>\r\n      <td>\r\n        <mat-form-field class=\"example-full-width\">\r\n          <mat-label>User Mail</mat-label>\r\n          <input matInput [(ngModel)]=\"mail\" />\r\n        </mat-form-field>\r\n      </td>\r\n    </tr>\r\n\r\n    <tr>\r\n      <td>\r\n        <mat-form-field class=\"example-full-width\">\r\n          <mat-label>User Password</mat-label>\r\n          <input matInput [(ngModel)]=\"password\" />\r\n        </mat-form-field>\r\n      </td>\r\n    </tr>\r\n\r\n  </table>\r\n  <div class=\"example-button-row\">\r\n    <button mat-raised-button color=\"accent\" (click)=\"saveUserInfo()\">Save User</button>\r\n  </div>\r\n</mat-card>\r\n","import { Component, Inject } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Router } from '@angular/router'\r\nimport { Ingredient, Recipe, User } from './recipe.models.component';\r\n\r\n\r\n\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-recipe-add',\r\n  templateUrl: './recipe-add.component.html',\r\n  styleUrls: ['InsertCss.css']\r\n})\r\nexport class RecipeAddComponent  {\r\n  public recipe: Recipe = <Recipe>{};\r\n  public users: User[];\r\n  public ingredients: Ingredient[];\r\n  constructor(private http: HttpClient, @Inject('BASE_URL') private baseUrl: string, private router: Router) {\r\n    this.loadUsers();\r\n    this.loadIngredients();\r\n  }\r\n\r\n\r\n\r\n  public saveRecipe() {\r\n    this.recipe.authorId = this.userLogged.id\r\n    this.http.post(this.baseUrl + 'api/recipes', this.recipe).subscribe(result => {\r\n      this.router.navigateByUrl(\"/recipeList\")\r\n    }, error => console.error(error));\r\n  }\r\n\r\n  loadUsers() {\r\n    this.http.get<User[]>(this.baseUrl + 'api/users').subscribe(result => {\r\n      this.users = result;\r\n      this.getLoggedIn()\r\n    }, error => console.error(error));\r\n  }\r\n  public userLogged: User;\r\n  getLoggedIn() {\r\n    for (let i = 0; i < this.users.length; i++) {\r\n      if (this.users[i].loggedIn == true) {\r\n        this.userLogged = this.users[i]\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  loadIngredients() {\r\n    this.http.get<Ingredient[]>(this.baseUrl + 'api/ingredients').subscribe(result => {\r\n      this.ingredients = result;\r\n     \r\n    }, error => console.error(error));\r\n  }\r\n\r\n\r\n\r\n \r\n\r\n \r\n\r\n}\r\n\r\n","<h1 id=\"tableLabel\">Add recipe</h1>\r\n\r\n\r\n\r\n\r\n\r\n<table class=\"example-full-width\" cellspacing=\"0\">\r\n  <tr>\r\n    <td>\r\n      <mat-form-field class=\"example-full-width\">\r\n        <mat-label>Recipe Name</mat-label>\r\n        <input matInput [(ngModel)]=\"recipe.recipeName\" />\r\n      </mat-form-field>\r\n    </td>\r\n  </tr>\r\n  <tr>\r\n    <td>\r\n      <mat-form-field class=\"example-full-width\">\r\n        <mat-label>Image Link</mat-label><br />\r\n        <input matInput [(ngModel)]=\"recipe.imageLink\" />\r\n\r\n\r\n      </mat-form-field>\r\n    </td>\r\n  </tr>\r\n  <tr>\r\n    <td>\r\n      <mat-form-field class=\"example-full-width\">\r\n        <mat-label>Recipe Summary</mat-label>\r\n        <input matInput [(ngModel)]=\"recipe.recipeSummary\" />\r\n      </mat-form-field>\r\n    </td>\r\n  </tr>\r\n  <tr>\r\n    <td>\r\n      <mat-form-field class=\"example-full-width\">\r\n        <mat-label>Recipe Details</mat-label>\r\n\r\n        <textarea cdkTextareaAutosize\r\n                  #autosize=\"cdkTextareaAutosize\"\r\n                  cdkAutosizeMinRows=\"1\"\r\n                  cdkAutosizeMaxRows=\"5\"\r\n                  matInput [(ngModel)]=\"recipe.recipeDetails\"></textarea>\r\n      </mat-form-field>\r\n    </td>\r\n  </tr>\r\n  <tr>\r\n    <td>\r\n      <mat-form-field class=\"example-full-width\">\r\n        <mat-label>Average Time</mat-label>\r\n        <input matInput type=\"number\" [(ngModel)]=\"recipe.cookingTime\" />\r\n      </mat-form-field>\r\n    </td>\r\n  </tr>\r\n  \r\n\r\n</table>\r\n\r\n<div class=\"example-button-row\">\r\n  <button mat-raised-button color=\"accent\" (click)=\"saveRecipe()\">Save Recipe</button>\r\n</div>\r\n\r\n\r\n\r\n \r\n\r\n\r\n","import { Inject } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Component } from '@angular/core';\r\nimport { ThemePalette } from '@angular/material/core';\r\nimport { User } from '../recipe/recipe.models.component';\r\nimport { Router } from '@angular/router';\r\n\r\nexport interface Task {\r\n  name: string;\r\n  completed: boolean;\r\n  color: ThemePalette;\r\n  subtasks?: Task[];\r\n}\r\n\r\n@Component({\r\n  selector: 'app-logIn',\r\n  templateUrl: './logIn.component.html',\r\n  styleUrls: ['input.css']\r\n\r\n})\r\nexport class LogInComponent {\r\n  public logInUsername: string;\r\n  public logInPassword: string;\r\n  constructor(private http: HttpClient, @Inject('BASE_URL') private baseUrl: string, private router: Router) {\r\n    this.loadUsers();\r\n  }\r\n\r\n  public users: User[];\r\n  loadUsers() {\r\n    this.http.get<User[]>(this.baseUrl + 'api/users').subscribe(result => {\r\n      this.users = result;\r\n    }, error => console.error(error));\r\n  }\r\n\r\n  public logInUser: User;\r\n\r\n  checkUser() {\r\n    for (let i = 0; i < this.users.length; i++) {\r\n      if (this.logInUsername == this.users[i].name && this.logInPassword == this.users[i].password) {\r\n        this.logInUser = this.users[i]\r\n        this.logOutUsers();\r\n        this.updateUserTest(this.logInUser,true)\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n\r\nallUserID: User;\r\nlogOutUsers() {\r\nfor (let i = 0; i < this.users.length; i++) {\r\n  this.allUserID = this.users[i];\r\n  this.updateUserTest(this.allUserID,false);\r\n  console.log(this.users[i].id);\r\n}\r\n}\r\n\r\npublic updateUserTest(userID,log) {\r\n  userID.loggedIn = log;\r\n  this.http.put<User>(this.baseUrl + 'api/users/' + userID.id, userID).subscribe(result => {\r\n    this.router.navigateByUrl(\"/recipeList\")\r\n}, error => console.error(error))\r\n}\r\n}\r\n\r\n\r\n","\r\n\r\n\r\n<mat-card style=\"text-align: center;\">\r\n  <table class=\"example-full-width\" cellspacing=\"0\">\r\n\r\n\r\n    <tr>\r\n      <td>\r\n        <mat-form-field class=\"example-full-width\">\r\n          <mat-label>Username</mat-label>\r\n          <input matInput [(ngModel)]=\"logInUsername\" />\r\n        </mat-form-field>\r\n\r\n      </td>\r\n    </tr>\r\n\r\n    <tr>\r\n      <td>\r\n        <mat-form-field class=\"example-full-width\">\r\n          <mat-label>Password</mat-label>\r\n          <input matInput [(ngModel)]=\"logInPassword\" />\r\n        </mat-form-field>\r\n\r\n      </td>\r\n    </tr>\r\n\r\n  </table>\r\n  <div class=\"example-button-row\">\r\n    <button mat-raised-button color=\"accent\" (click)=\"checkUser()\">Log In</button>\r\n    </div>\r\n</mat-card>\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-counter-component',\r\n  templateUrl: './counter.component.html'\r\n})\r\nexport class CounterComponent {\r\n  public currentCount = 0;\r\n\r\n  public incrementCounter() {\r\n    this.currentCount++;\r\n  }\r\n}\r\n","<h1>Counter</h1>\r\n\r\n<p>This is a simple example of an Angular component.</p>\r\n\r\n<p aria-live=\"polite\">Current count: <strong>{{ currentCount }}</strong></p>\r\n\r\n<button class=\"btn btn-primary\" (click)=\"incrementCounter()\">Increment</button>\r\n","import { Component, Inject } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Router } from '@angular/router'\r\nimport { ThemePalette } from '@angular/material/core';\r\nimport { Ingredient } from '../recipe/recipe.models.component';\r\n\r\nexport interface Task {\r\n  name: string;\r\n  completed: boolean;\r\n  color: ThemePalette;\r\n  subtasks?: Task[];\r\n}\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-ingredient-add',\r\n  templateUrl: './ingredient-add.component.html',\r\n  styleUrls: ['InsertCss.css']\r\n})\r\nexport class IngredientAddComponent  {\r\n  public ingredient: Ingredient = <Ingredient>{};\r\n  constructor(private http: HttpClient, @Inject('BASE_URL') private baseUrl: string, private router: Router) {\r\n  }\r\n\r\n  public saveIngredient() {\r\n    this.http.post(this.baseUrl + 'api/ingredients', this.ingredient).subscribe(result => {\r\n      this.router.navigateByUrl(\"/recipes\")\r\n    }, error => console.error(error));\r\n  }\r\n\r\n\r\n}\r\n\r\n","<h1 id=\"tableLabel\">Add user</h1>\r\n\r\n\r\n<table class=\"example-full-width\" cellspacing=\"0\">\r\n  <tr>\r\n    <td>\r\n      <mat-form-field class=\"example-full-width\">\r\n        <mat-label>name</mat-label>\r\n        <input matInput [(ngModel)]=\"ingredient.name\" />\r\n      </mat-form-field>\r\n    </td>\r\n  </tr>\r\n  <tr>\r\n\r\n  <tr>\r\n    <td>\r\n      <mat-form-field class=\"example-full-width\">\r\n        <mat-label>details</mat-label>\r\n        <input matInput [(ngModel)]=\"ingredient.details\" />\r\n      </mat-form-field>\r\n    </td>\r\n  </tr>\r\n\r\n  \r\n\r\n\r\n</table>\r\n\r\n<div class=\"example-button-row\">\r\n  <button mat-raised-button color=\"accent\" (click)=\"saveIngredient()\">Save Ingredient</button>\r\n</div>\r\n","import { Component } from '@angular/core';\r\nimport { User } from '../recipe/recipe.models.component';\r\nimport { Inject } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-nav-menu',\r\n  templateUrl: './nav-menu.component.html',\r\n  styleUrls: ['./nav-menu.component.css']\r\n})\r\nexport class NavMenuComponent {\r\n  isExpanded = false;\r\n\r\n  constructor(private http: HttpClient, @Inject('BASE_URL') private baseUrl: string, private router: Router) {\r\n    this.loadUsers();\r\n  }\r\n\r\n  collapse() {\r\n    this.isExpanded = false;\r\n  }\r\n\r\n  toggle() {\r\n    this.isExpanded = !this.isExpanded;\r\n  }\r\n\r\n  public test: boolean;\r\n  public users: User[];\r\n  loadUsers() {\r\n    this.http.get<User[]>(this.baseUrl + 'api/users').subscribe(result => {\r\n      this.users = result;\r\n      this.test = this.checkLoggedIn()\r\n    }, error => console.error(error));\r\n  }\r\n  loggedInUser: User;\r\n\r\n  checkLoggedIn() {\r\n    \r\n    for (let i = 0; i < this.users.length; i++) {\r\n      if (this.users[i].loggedIn == true) {\r\n        this.loggedInUser = this.users[i]\r\n        return true\r\n      }\r\n    }\r\n    return false\r\n  }\r\n\r\n\r\n  allUserID: User;\r\n  logOut() {\r\n    for (let i = 0; i < this.users.length; i++) {\r\n      this.allUserID = this.users[i];\r\n      this.updateUserTest(this.allUserID, false);\r\n      window.location.reload();\r\n    }\r\n  }\r\n\r\n  public updateUserTest(userID, log) {\r\n    userID.loggedIn = log;\r\n    this.http.put<User>(this.baseUrl + 'api/users/' + userID.id, userID).subscribe(result => {\r\n    }, error => console.error(error))\r\n  }\r\n\r\n}\r\n","<header>\r\n\r\n  \r\n \r\n\r\n  <nav class=\"navbar navbar-expand-sm navbar-toggleable-sm navbar-light bg-white border-bottom box-shadow mb-3\">\r\n    <div class=\"container\">\r\n      \r\n      <a class=\"navbar-brand\" [routerLink]=\"['/']\">Sweet Stuff</a>\r\n      <button class=\"navbar-toggler\"\r\n              type=\"button\"\r\n              data-toggle=\"collapse\"\r\n              data-target=\".navbar-collapse\"\r\n              aria-label=\"Toggle navigation\"\r\n              [attr.aria-expanded]=\"isExpanded\"\r\n              (click)=\"toggle()\">\r\n        <span class=\"navbar-toggler-icon\"></span>\r\n      </button>\r\n      <div class=\"navbar-collapse collapse d-sm-inline-flex justify-content-end\"\r\n           [ngClass]=\"{ show: isExpanded }\">\r\n        <ul class=\"navbar-nav flex-grow\">\r\n          <li class=\"nav-item\"\r\n              [routerLinkActive]=\"['link-active']\"\r\n              [routerLinkActiveOptions]=\"{ exact: true }\">\r\n            <a class=\"nav-link text-dark\" [routerLink]=\"['/']\">Home</a>\r\n          </li>\r\n          <div *ngIf=\"test\">\r\n            <div *ngIf=\"loggedInUser.id == 'f0999877-5ccf-40c6-99ca-76227a0f9ef1'\">\r\n              <li class=\"nav-item\" [routerLinkActive]=\"['link-active']\">\r\n                <a class=\"nav-link text-dark\" [routerLink]=\"['/recipes']\">Recipes</a>\r\n              </li>\r\n            </div>\r\n            </div>\r\n            <div *ngIf=\"!test\">\r\n              <li class=\"nav-item\" [routerLinkActive]=\"['link-active']\">\r\n                <a class=\"nav-link text-dark\" [routerLink]=\"['/user-add']\">Register</a>\r\n              </li>\r\n            </div>\r\n            <div *ngIf=\"!test\">\r\n              <li class=\"nav-item\" [routerLinkActive]=\"['link-active']\">\r\n                <a class=\"nav-link text-dark\" [routerLink]=\"['/logIn']\">Log In</a>\r\n              </li>\r\n            </div>\r\n            <div *ngIf=\"test\">\r\n              <li class=\"nav-item\" [routerLinkActive]=\"['link-active']\">\r\n                <a class=\"nav-link text-dark\" (click)='logOut()'><button mat-button style=\"background-color:white; border:0px\"> ({{loggedInUser.name}}) Log Out</button></a>\r\n              </li>\r\n            </div>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  </nav>\r\n</header>\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html'\r\n})\r\nexport class AppComponent {\r\n  title = 'app';\r\n}\r\n","<body>\r\n  <app-nav-menu></app-nav-menu>\r\n  <div class=\"container\">\r\n    <router-outlet></router-outlet>\r\n  </div>\r\n</body>\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { RouterModule } from '@angular/router';\r\n\r\nimport { RatingModule } from 'ng-starrating';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { NavMenuComponent } from './nav-menu/nav-menu.component';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { CounterComponent } from './counter/counter.component';\r\nimport { FetchDataComponent } from './fetch-data/fetch-data.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\n\r\n\r\nimport { RecipeComponent } from './recipe/recipe.component';\r\nimport { RecipeUpdateComponent } from './recipe/recipe-update.component';\r\nimport { RecipeAddComponent } from './recipe/recipe-add.component';\r\n\r\nimport { MatSliderModule } from '@angular/material/slider';\r\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatExpansionModule } from '@angular/material/expansion';\r\nimport { MatSortModule } from '@angular/material/sort';\r\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\r\n\r\n\r\nimport { UserAddComponent } from './user/user-add.component';\r\nimport { UserUpdateComponent } from './user/user-update.component';\r\nimport { RatingUpdateComponent } from './rating/rating-update.component';\r\nimport { RatingAddComponent } from './rating/rating-add.component';\r\nimport { IngredientUpdateComponent } from './ingredient/ingredient-update.component';\r\nimport { IngredientAddComponent } from './ingredient/ingredient-add.component';\r\nimport { IngredientDataAddComponent } from './ingredientData/ingredientData-add.component';\r\nimport { IngredientDataUpdateComponent } from './ingredientData/ingredientData-update.component';\r\nimport { CommentTableUpdateComponent } from './messageTable/commentTable-update.component';\r\nimport { CommentTableAddComponent } from './messageTable/commentTable-add.component';\r\nimport { RecipeListComponent } from './recipeListPage/recipeList.component';\r\nimport { RecipeListReadComponent } from './recipeListPage/recipeList-read.component';\r\nimport { LogInComponent } from './logIn/logIn.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    NavMenuComponent,\r\n    HomeComponent,\r\n    CounterComponent,\r\n    FetchDataComponent,\r\n    RecipeComponent,\r\n    RecipeUpdateComponent,\r\n    RecipeAddComponent,\r\n    RecipeListComponent,\r\n    RecipeListReadComponent,\r\n    UserAddComponent,\r\n    UserUpdateComponent,\r\n    RatingUpdateComponent,\r\n    RatingAddComponent,\r\n    IngredientUpdateComponent,\r\n    IngredientAddComponent,\r\n    IngredientDataAddComponent,\r\n    IngredientDataUpdateComponent,\r\n    CommentTableUpdateComponent,\r\n    CommentTableAddComponent,\r\n    LogInComponent,\r\n  ],\r\n  imports: [\r\n    BrowserModule.withServerTransition({ appId: 'ng-cli-universal' }),\r\n    HttpClientModule,\r\n    FormsModule,\r\n    RouterModule.forRoot([\r\n      { path: '', component: RecipeListComponent, pathMatch: 'full' },\r\n      { path: 'recipes', component: RecipeComponent },\r\n      { path: 'recipe-update', component: RecipeUpdateComponent },\r\n      { path: 'recipe-add', component: RecipeAddComponent },\r\n      { path: 'user-add', component: UserAddComponent },\r\n      { path: 'user-update', component: UserUpdateComponent },\r\n      { path: 'rating-add', component: RatingAddComponent },\r\n      { path: 'rating-update', component: RatingUpdateComponent },\r\n      { path: 'ingredient-add', component: IngredientAddComponent },\r\n      { path: 'ingredient-update', component: IngredientUpdateComponent },\r\n      { path: 'ingredientData-add', component: IngredientDataAddComponent },\r\n      { path: 'ingredientData-update', component: IngredientDataUpdateComponent },\r\n      { path: 'commentTable-add', component: CommentTableAddComponent },\r\n      { path: 'commentTable-update', component: CommentTableUpdateComponent },\r\n      { path: 'recipeList', component: RecipeListComponent },\r\n      { path: 'recipeList-read/:id', component: RecipeListReadComponent },\r\n      { path: 'logIn', component: LogInComponent },\r\n\r\n], { relativeLinkResolution: 'legacy' }),\r\n    BrowserAnimationsModule,\r\n    RatingModule,\r\n    MatTableModule,\r\n    MatSliderModule,\r\n    MatSlideToggleModule,\r\n    MatInputModule,\r\n    MatDatepickerModule,\r\n    MatIconModule,\r\n    MatButtonModule,\r\n    MatCheckboxModule,\r\n    MatCardModule,\r\n    MatFormFieldModule,\r\n    MatSelectModule,\r\n    MatExpansionModule,\r\n    MatSortModule,\r\n    MatSnackBarModule,\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { User } from '../recipe/recipe.models.component';\r\n\r\n@Component({\r\n  selector: 'app-user-update',\r\n  templateUrl: './user-update.component.html',\r\n  styleUrls: ['input.css'],\r\n\r\n})\r\nexport class UserUpdateComponent implements OnInit {\r\n  constructor(private http: HttpClient,\r\n    @Inject('BASE_URL') private baseUrl: string,\r\n    private router: Router,\r\n    private activatedRoute: ActivatedRoute) { }\r\n\r\n  public id: string;\r\n  public user: User = <User>{};\r\n  \r\n  ngOnInit() {\r\n   \r\n    this.activatedRoute.queryParams.subscribe(params => {\r\n      this.id = params.id;\r\n      this.loadUser();\r\n    });\r\n\r\n  }\r\n\r\n  public loadUser() {\r\n    this.http.get<User>(this.baseUrl + 'api/users/' + this.id).subscribe(result => {\r\n      this.user = result;\r\n    }, error => console.error(error))\r\n  }\r\n\r\n  public updateUser() {\r\n    this.http.put<User>(this.baseUrl + 'api/users/' + this.id, this.user).subscribe(result => {\r\n      this.router.navigateByUrl(\"/recipeList\")\r\n    }, error => console.error(error))\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n}\r\n","\r\n<h1 id=\"tableLabel\">Update recipe</h1>\r\n\r\n\r\n\r\n\r\n<table class=\"example-full-width\" cellspacing=\"0\">\r\n\r\n\r\n  <tr>\r\n    <td>\r\n      <mat-form-field class=\"example-full-width\">\r\n        <mat-label>User name</mat-label>\r\n        <input matInput [(ngModel)]=\"user.name\" />\r\n      </mat-form-field>\r\n    </td>\r\n  </tr>\r\n  <tr>\r\n\r\n  <tr>\r\n    <td>\r\n      <mat-form-field class=\"example-full-width\">\r\n        <mat-label>User Username</mat-label>\r\n        <input matInput [(ngModel)]=\"user.username\" />\r\n      </mat-form-field>\r\n    </td>\r\n  </tr>\r\n  <tr>\r\n\r\n  <tr>\r\n    <td>\r\n      <mat-form-field class=\"example-full-width\">\r\n        <mat-label>User mail</mat-label>\r\n        <input matInput [(ngModel)]=\"user.mail\" />\r\n      </mat-form-field>\r\n    </td>\r\n  </tr>\r\n  <tr>\r\n\r\n  <tr>\r\n    <td>\r\n      <mat-form-field class=\"example-full-width\">\r\n        <mat-label>User password</mat-label>\r\n        <input matInput [(ngModel)]=\"user.password\" />\r\n      </mat-form-field>\r\n    </td>\r\n  </tr>\r\n  <tr>\r\n\r\n\r\n\r\n\r\n</table>\r\n\r\n<div class=\"example-button-row\">\r\n  <button mat-raised-button color=\"accent\" (click)=\"updateUser()\">Save User</button>\r\n</div>\r\n\r\n","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { CommentTable } from '../recipe/recipe.models.component';\r\n\r\n@Component({\r\n  selector: 'app-commentTable-update',\r\n  templateUrl: './commentTable-update.component.html',\r\n  styleUrls: ['input.css'],\r\n\r\n})\r\nexport class CommentTableUpdateComponent implements OnInit {\r\n  constructor(private http: HttpClient,\r\n    @Inject('BASE_URL') private baseUrl: string,\r\n    private router: Router,\r\n    private activatedRoute: ActivatedRoute) { }\r\n\r\n  public id: string;\r\n  public commentTable: CommentTable = <CommentTable>{};\r\n  \r\n  ngOnInit() {\r\n   \r\n    this.activatedRoute.queryParams.subscribe(params => {\r\n      this.id = params.id;\r\n      this.loadCommentTables();\r\n    });\r\n\r\n  }\r\n\r\n  public loadCommentTables() {\r\n    this.http.get<CommentTable>(this.baseUrl + 'api/commentTables/' + this.id).subscribe(result => {\r\n      this.commentTable = result;\r\n    }, error => console.error(error))\r\n  }\r\n\r\n  public updateCommentTable() {\r\n    this.http.put<CommentTable>(this.baseUrl + 'api/commentTables/' + this.id, this.commentTable).subscribe(result => {\r\n      this.router.navigateByUrl(\"/recipeList-read/\" + this.commentTable.recipeID);\r\n    }, error => console.error(error))\r\n  }\r\n}\r\n","\r\n<h1 id=\"tableLabel\">Update recipe</h1>\r\n\r\n\r\n\r\n\r\n<table class=\"example-full-width\" cellspacing=\"0\">\r\n\r\n\r\n  <tr>\r\n    <td>\r\n      <mat-form-field class=\"example-full-width\">\r\n        <mat-label>Comment Msg</mat-label>\r\n        <input matInput [(ngModel)]=\"commentTable.msg\" />\r\n      </mat-form-field>\r\n    </td>\r\n  </tr>\r\n  <tr>\r\n\r\n  \r\n\r\n</table>\r\n\r\n<div class=\"example-button-row\">\r\n  <button mat-raised-button color=\"accent\" (click)=\"updateCommentTable()\">Save commentTable</button>\r\n</div>\r\n\r\n","import { Component, Inject } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Router } from '@angular/router'\r\nimport { ThemePalette } from '@angular/material/core';\r\nimport { Ingredient, IngredientData } from '../recipe/recipe.models.component';\r\n\r\nexport interface Task {\r\n  name: string;\r\n  completed: boolean;\r\n  color: ThemePalette;\r\n  subtasks?: Task[];\r\n}\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-ingredientData-add',\r\n  templateUrl: './ingredientData-add.component.html',\r\n  styleUrls: ['InsertCss.css']\r\n})\r\nexport class IngredientDataAddComponent  {\r\n  public ingredientData: IngredientData = <IngredientData>{};\r\n  constructor(private http: HttpClient, @Inject('BASE_URL') private baseUrl: string, private router: Router) {\r\n    this.loadIngredients();\r\n  }\r\n\r\n  public saveIngredientData() {\r\n    this.http.post(this.baseUrl + 'api/ingredientDatas', this.ingredientData).subscribe(result => {\r\n      this.router.navigateByUrl(\"/recipes\")\r\n    }, error => console.error(error));\r\n  }\r\n\r\n  public ingredients: Ingredient[];\r\n  loadIngredients() {\r\n    this.http.get<Ingredient[]>(this.baseUrl + 'api/ingredients').subscribe(result => {\r\n      this.ingredients = result;\r\n\r\n    }, error => console.error(error));\r\n  }\r\n\r\n}\r\n\r\n","<h1 id=\"tableLabel\">Add user</h1>\r\n\r\n\r\n<table class=\"example-full-width\" cellspacing=\"0\">\r\n  <tr>\r\n    <td>\r\n      <mat-form-field class=\"example-full-width\">\r\n        <mat-label>recipeID</mat-label>\r\n        <input matInput [(ngModel)]=\"ingredientData.recipeID\" />\r\n      </mat-form-field>\r\n    </td>\r\n  </tr>\r\n  <tr>\r\n\r\n  <tr>\r\n    <td>\r\n      <mat-form-field appearance=\"fill\" class=\"example-full-width\">\r\n        <mat-label>Select</mat-label>\r\n        <mat-select placeholder=\"Ingredient\" [(ngModel)]=\"ingredientData.ingredientID\">\r\n          <span *ngFor=\"let ingredient of ingredients\">\r\n            \r\n            <mat-option value=\"{{ingredient.id}}\">{{ingredient.name}}</mat-option>\r\n          </span>\r\n        </mat-select>\r\n      </mat-form-field>\r\n    </td>\r\n  </tr>\r\n\r\n\r\n\r\n\r\n</table>\r\n\r\n<div class=\"example-button-row\">\r\n  <button mat-raised-button color=\"accent\" (click)=\"saveIngredientData()\">Save Ingredient</button>\r\n</div>\r\n\r\n\r\n\r\n\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nexport function getBaseUrl() {\r\n  return document.getElementsByTagName('base')[0].href;\r\n}\r\n\r\nconst providers = [\r\n  { provide: 'BASE_URL', useFactory: getBaseUrl, deps: [] }\r\n];\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic(providers).bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}